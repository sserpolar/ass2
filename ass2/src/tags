!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.2.2	//
ALLOCATED	sim-scalar-cpen411.c	/^    ALLOCATED,$/;"	e	enum:instruction_status	file:
ANSI_SYMCAT	host.h	72;"	d
ANSI_SYMCAT	host.h	78;"	d
B110	syscall.c	167;"	d	file:
B1200	syscall.c	173;"	d	file:
B134	syscall.c	168;"	d	file:
B150	syscall.c	169;"	d	file:
B1800	syscall.c	174;"	d	file:
B19200	syscall.c	178;"	d	file:
B200	syscall.c	170;"	d	file:
B2400	syscall.c	175;"	d	file:
B300	syscall.c	171;"	d	file:
B3600	syscall.c	195;"	d	file:
B38400	syscall.c	179;"	d	file:
B4800	syscall.c	176;"	d	file:
B50	syscall.c	165;"	d	file:
B600	syscall.c	172;"	d	file:
B7200	syscall.c	196;"	d	file:
B75	syscall.c	166;"	d	file:
B900	syscall.c	194;"	d	file:
B9600	syscall.c	177;"	d	file:
BCODE	machine.h	327;"	d
BLOB_TAIL_SIZE	eio.c	488;"	d	file:
BS	machine.h	333;"	d
BS0	syscall.c	138;"	d	file:
BS0	syscall.c	188;"	d	file:
BS1	syscall.c	139;"	d	file:
BS1	syscall.c	189;"	d	file:
CAT	sysprobe.c	78;"	d	file:
CONFIG_H	config.h	53;"	d
CONNECT	machine.c	115;"	d	file:
CONNECT	machine.c	72;"	d	file:
CONNECT	machine.c	81;"	d	file:
CONNECT	machine.c	90;"	d	file:
CONNECT	machine.h	237;"	d
CONNECT	sim-scalar-cpen411.c	478;"	d	file:
CPC	sim-scalar-cpen411.c	208;"	d	file:
CR0	syscall.c	130;"	d	file:
CR0	syscall.c	150;"	d	file:
CR0	syscall.c	182;"	d	file:
CR1	syscall.c	131;"	d	file:
CR1	syscall.c	183;"	d	file:
CR2	syscall.c	132;"	d	file:
CR2	syscall.c	184;"	d	file:
CR3	syscall.c	133;"	d	file:
CR3	syscall.c	185;"	d	file:
DECLARE_FAULT	sim-scalar-cpen411.c	479;"	d	file:
DECODED	sim-scalar-cpen411.c	/^    DECODED,$/;"	e	enum:instruction_status	file:
DEFINST	machine.c	113;"	d	file:
DEFINST	machine.c	565;"	d	file:
DEFINST	machine.c	70;"	d	file:
DEFINST	machine.c	79;"	d	file:
DEFINST	machine.c	88;"	d	file:
DEFINST	machine.h	235;"	d
DEFINST	sim-scalar-cpen411.c	470;"	d	file:
DEFLINK	machine.c	114;"	d	file:
DEFLINK	machine.c	71;"	d	file:
DEFLINK	machine.c	80;"	d	file:
DEFLINK	machine.c	89;"	d	file:
DEFLINK	machine.h	236;"	d
DEFLINK	sim-scalar-cpen411.c	475;"	d	file:
DFCC	sim-scalar-cpen411.c	290;"	d	file:
DFPR_D	sim-scalar-cpen411.c	285;"	d	file:
DFPR_F	sim-scalar-cpen411.c	284;"	d	file:
DFPR_L	sim-scalar-cpen411.c	283;"	d	file:
DGPR	sim-scalar-cpen411.c	279;"	d	file:
DGPR_D	sim-scalar-cpen411.c	280;"	d	file:
DHI	sim-scalar-cpen411.c	288;"	d	file:
DIV0	machine.h	759;"	d
DIV0	machine.h	775;"	d
DLO	sim-scalar-cpen411.c	289;"	d	file:
DNA	sim-scalar-cpen411.c	276;"	d	file:
DONE	sim-scalar-cpen411.c	/^    DONE$/;"	e	enum:instruction_status	file:
DOTSEEN	misc.c	444;"	d	file:
DTMP	sim-scalar-cpen411.c	291;"	d	file:
ECHO	syscall.c	142;"	d	file:
ECHO	syscall.c	164;"	d	file:
EIO_ALPHA_FORMAT	eio.h	59;"	d
EIO_FILE_HEADER	eio.c	76;"	d	file:
EIO_FILE_VERSION	eio.h	62;"	d
EIO_H	eio.h	53;"	d
EIO_PISA_FORMAT	eio.h	58;"	d
ENDIAN_H	endian.h	53;"	d
ERR_BADCONST	eval.h	/^  ERR_BADCONST,			\/* badly formed constant *\/$/;"	e	enum:eval_err_t
ERR_BADEXPR	eval.h	/^  ERR_BADEXPR,			\/* badly formed constant *\/$/;"	e	enum:eval_err_t
ERR_DIV0	eval.h	/^  ERR_DIV0,			\/* divide by zero *\/$/;"	e	enum:eval_err_t
ERR_EXTRA	eval.h	/^  ERR_EXTRA,			\/* extra characters at end of expression *\/$/;"	e	enum:eval_err_t
ERR_NOERR	eval.h	/^  ERR_NOERR,			\/* no error *\/$/;"	e	enum:eval_err_t
ERR_NOTERM	eval.h	/^  ERR_NOTERM,			\/* expression term is missing *\/$/;"	e	enum:eval_err_t
ERR_NUM	eval.h	/^  ERR_NUM$/;"	e	enum:eval_err_t
ERR_UNDEFVAR	eval.h	/^  ERR_UNDEFVAR,			\/* variable is undefined *\/$/;"	e	enum:eval_err_t
ERR_UPAREN	eval.h	/^  ERR_UPAREN,			\/* unmatched parenthesis *\/$/;"	e	enum:eval_err_t
EVAL_H	eval.h	53;"	d
EVAL_INTEGRAL	eval.h	131;"	d
EVAL_INTEGRAL	eval.h	135;"	d
EXECUTED	sim-scalar-cpen411.c	/^    EXECUTED,$/;"	e	enum:instruction_status	file:
EXTA	syscall.c	192;"	d	file:
EXTB	syscall.c	193;"	d	file:
EX_MEM_LATCH	sim-scalar-cpen411.c	/^    EX_MEM_LATCH,$/;"	e	enum:pipeline_latch	file:
FALSE	misc.h	66;"	d
FCC	sim-scalar-cpen411.c	229;"	d	file:
FD	machine.h	315;"	d
FDIV	machine.h	785;"	d
FETCHED	sim-scalar-cpen411.c	/^    FETCHED,$/;"	e	enum:instruction_status	file:
FF0	syscall.c	140;"	d	file:
FF0	syscall.c	190;"	d	file:
FF1	syscall.c	141;"	d	file:
FF1	syscall.c	191;"	d	file:
FINT	machine.h	786;"	d
FLUSHO	syscall.c	145;"	d	file:
FPALIGN	machine.h	766;"	d
FPALIGN	machine.h	777;"	d
FPCR	sim-scalar-cpen411.c	241;"	d	file:
FPR	sim-scalar-cpen411.c	237;"	d	file:
FPR_D	sim-scalar-cpen411.c	221;"	d	file:
FPR_F	sim-scalar-cpen411.c	219;"	d	file:
FPR_L	sim-scalar-cpen411.c	217;"	d	file:
FPR_Q	sim-scalar-cpen411.c	235;"	d	file:
FS	machine.h	313;"	d
FT	machine.h	314;"	d
FUClass_NA	machine.h	/^  FUClass_NA = 0,	\/* inst does not use a functional unit *\/$/;"	e	enum:md_fu_class
F_CALL	machine.h	295;"	d
F_COND	machine.h	284;"	d
F_CTRL	machine.h	282;"	d
F_DIRECT	machine.h	290;"	d
F_DIRJMP	machine.h	293;"	d
F_DISP	machine.h	288;"	d
F_FCOMP	machine.h	281;"	d
F_FPCOND	machine.h	296;"	d
F_ICOMP	machine.h	280;"	d
F_IMM	machine.h	297;"	d
F_INDIRJMP	machine.h	294;"	d
F_LOAD	machine.h	286;"	d
F_LONGLAT	machine.h	292;"	d
F_MEM	machine.h	285;"	d
F_RR	machine.h	289;"	d
F_STORE	machine.h	287;"	d
F_TRAP	machine.h	291;"	d
F_UNCOND	machine.h	283;"	d
FloatADD	machine.h	/^  FloatADD,		\/* floating point adder\/subtractor *\/$/;"	e	enum:md_fu_class
FloatCMP	machine.h	/^  FloatCMP,		\/* floating point comparator *\/$/;"	e	enum:md_fu_class
FloatCVT	machine.h	/^  FloatCVT,		\/* floating point<->integer converter *\/$/;"	e	enum:md_fu_class
FloatDIV	machine.h	/^  FloatDIV,		\/* floating point divider *\/$/;"	e	enum:md_fu_class
FloatMULT	machine.h	/^  FloatMULT,		\/* floating point multiplier *\/$/;"	e	enum:md_fu_class
FloatSQRT	machine.h	/^  FloatSQRT,		\/* floating point square root *\/$/;"	e	enum:md_fu_class
GPR	sim-scalar-cpen411.c	211;"	d	file:
HI	sim-scalar-cpen411.c	226;"	d	file:
HIBITL	misc.c	391;"	d	file:
HIBITL	misc.c	395;"	d	file:
HOST_H	host.h	53;"	d
HOST_HAS_QWORD	host.h	106;"	d
HOST_HAS_QWORD	host.h	117;"	d
HOST_HAS_QWORD	host.h	123;"	d
HOST_HAS_QWORD	host.h	95;"	d
HOST_ONLY	sysprobe.c	75;"	d	file:
HTAB_HASH	stats.h	90;"	d
HTAB_SZ	stats.h	89;"	d
HUPCL	syscall.c	163;"	d	file:
IDIV	machine.h	783;"	d
ID_EX_LATCH	sim-scalar-cpen411.c	/^    ID_EX_LATCH,$/;"	e	enum:pipeline_latch	file:
IFAIL	machine.h	755;"	d
IF_ID_LATCH	sim-scalar-cpen411.c	/^    IF_ID_LATCH=0,$/;"	e	enum:pipeline_latch	file:
IMM	machine.h	318;"	d
IMOD	machine.h	784;"	d
INC_DEC	machine.h	730;"	d
INLINE	host.h	61;"	d
INLINE	host.h	63;"	d
INLINE	host.h	65;"	d
INTALIGN	machine.h	762;"	d
INTALIGN	machine.h	776;"	d
Inst	sim-scalar-cpen411.c	/^typedef struct Inst {$/;"	s	file:
IntALU	machine.h	/^  IntALU,		\/* integer ALU *\/$/;"	e	enum:md_fu_class
IntDIV	machine.h	/^  IntDIV,		\/* integer divider *\/$/;"	e	enum:md_fu_class
IntMULT	machine.h	/^  IntMULT,		\/* integer multiplier *\/$/;"	e	enum:md_fu_class
LENGTH	misc.c	445;"	d	file:
LL	host.h	100;"	d
LL	host.h	103;"	d
LL	host.h	111;"	d
LL	host.h	114;"	d
LL	host.h	121;"	d
LLHIGH	misc.h	78;"	d
LLLOW	misc.h	79;"	d
LL_MAX	misc.c	783;"	d	file:
LL_MIN	misc.c	784;"	d	file:
LO	sim-scalar-cpen411.c	228;"	d	file:
LOADER_H	loader.h	53;"	d
LZERO	misc.c	443;"	d	file:
MAX	misc.h	71;"	d
MAXBUFSIZE	syscall.c	460;"	d	file:
MAXDIGS	misc.c	449;"	d	file:
MAXINT_VAL	machine.h	336;"	d
MAX_FILENAME_LEN	options.c	1197;"	d	file:
MAX_INSTS_PER_CLASS	resource.h	61;"	d
MAX_LINE_ARGS	options.c	1196;"	d	file:
MAX_RES_CLASSES	resource.h	58;"	d
MAX_VARS	options.c	1711;"	d	file:
MD_AGEN_OP	machine.h	646;"	d
MD_AMODE_POSTPROBE	machine.h	478;"	d
MD_AMODE_PREPROBE	machine.h	452;"	d
MD_AMODE_PROBE	machine.h	456;"	d
MD_BR_SHIFT	machine.h	664;"	d
MD_CROSS_ENDIAN	machine.h	83;"	d
MD_CROSS_ENDIAN	machine.h	86;"	d
MD_DATA_BASE	machine.h	213;"	d
MD_EIO_FILE_FORMAT	machine.h	487;"	d
MD_EXIT_SYSCALL	machine.h	417;"	d
MD_EXO_CMP_IREG	machine.h	540;"	d
MD_EXO_TO_FREG	machine.h	537;"	d
MD_EXO_TO_IREG	machine.h	534;"	d
MD_EXO_TO_MISC_REGS	machine.h	505;"	d
MD_FETCH_INST	machine.h	203;"	d
MD_FIRST_IN_REG	machine.h	543;"	d
MD_FIRST_OUT_REG	machine.h	546;"	d
MD_FREG_TO_EXO	machine.h	502;"	d
MD_FU_NAME	machine.h	276;"	d
MD_IREG_TO_EXO	machine.h	499;"	d
MD_IS_CALL	machine.h	430;"	d
MD_IS_INDIR	machine.h	437;"	d
MD_IS_RETURN	machine.h	434;"	d
MD_LAST_IN_REG	machine.h	544;"	d
MD_LAST_OUT_REG	machine.h	547;"	d
MD_LOG_PAGE_SIZE	machine.h	109;"	d
MD_MAX_ENVIRON	machine.h	217;"	d
MD_MAX_MASK	machine.h	230;"	d
MD_MISC_REGS_TO_EXO	machine.h	489;"	d
MD_NOP_INST	machine.c	/^md_inst_t MD_NOP_INST = { NOP, 0 };$/;"	v
MD_NOP_OP	machine.h	649;"	d
MD_NUM_CREGS	machine.h	139;"	d
MD_NUM_FREGS	machine.h	136;"	d
MD_NUM_IREGS	machine.h	133;"	d
MD_OPFIELD	machine.h	225;"	d
MD_OP_ENUM	machine.h	243;"	d
MD_OP_FLAGS	machine.h	300;"	d
MD_OP_FORMAT	machine.h	251;"	d
MD_OP_FUCLASS	machine.h	272;"	d
MD_OP_NAME	machine.h	247;"	d
MD_OUTPUT_SYSCALL	machine.h	421;"	d
MD_PAGE_SIZE	machine.h	108;"	d
MD_QWORD_ADDRS	machine.h	97;"	d
MD_REG_FP	machine.h	/^  MD_REG_FP = 30	\/* frame pointer *\/$/;"	e	enum:md_reg_names
MD_REG_GP	machine.h	/^  MD_REG_GP = 28,	\/* global data section pointer *\/$/;"	e	enum:md_reg_names
MD_REG_SP	machine.h	/^  MD_REG_SP = 29,	\/* stack pointer *\/$/;"	e	enum:md_reg_names
MD_REG_ZERO	machine.h	/^  MD_REG_ZERO = 0,	\/* zero register *\/$/;"	e	enum:md_reg_names
MD_SET_OPCODE	machine.h	226;"	d
MD_STACK_BASE	machine.h	214;"	d
MD_STREAM_FILENO	machine.h	427;"	d
MD_SWAPD	machine.h	197;"	d
MD_SWAPH	machine.h	186;"	d
MD_SWAPH	machine.h	194;"	d
MD_SWAPI	machine.h	189;"	d
MD_SWAPI	machine.h	198;"	d
MD_SWAPQ	machine.h	188;"	d
MD_SWAPQ	machine.h	196;"	d
MD_SWAPW	machine.h	187;"	d
MD_SWAPW	machine.h	195;"	d
MD_TEXT_BASE	machine.h	212;"	d
MD_TOTAL_REGS	machine.h	142;"	d
MD_VALID_ADDR	machine.h	653;"	d
MEMORY_H	memory.h	53;"	d
MEMORY_STAGE_COMPLETED	sim-scalar-cpen411.c	/^    MEMORY_STAGE_COMPLETED,$/;"	e	enum:instruction_status	file:
MEM_BLOCK_SIZE	memory.c	496;"	d	file:
MEM_FORALL	memory.h	140;"	d
MEM_LOG_PTAB_SIZE	memory.h	65;"	d
MEM_OFFSET	memory.h	130;"	d
MEM_PAGE	memory.h	119;"	d
MEM_PTAB_SET	memory.h	106;"	d
MEM_PTAB_SIZE	memory.h	64;"	d
MEM_PTAB_TAG	memory.h	110;"	d
MEM_PTE_ADDR	memory.h	114;"	d
MEM_READ	memory.h	151;"	d
MEM_READ_BYTE	memory.h	172;"	d
MEM_READ_HALF	memory.h	174;"	d
MEM_READ_QWORD	memory.h	180;"	d
MEM_READ_SBYTE	memory.h	173;"	d
MEM_READ_SHALF	memory.h	175;"	d
MEM_READ_SQWORD	memory.h	181;"	d
MEM_READ_SWORD	memory.h	177;"	d
MEM_READ_WORD	memory.h	176;"	d
MEM_TABLE_SIZE	memory.c	488;"	d	file:
MEM_TICKLE	memory.h	133;"	d
MEM_WB_LATCH	sim-scalar-cpen411.c	/^    MEM_WB_LATCH,$/;"	e	enum:pipeline_latch	file:
MEM_WRITE	memory.h	162;"	d
MEM_WRITE_BYTE	memory.h	184;"	d
MEM_WRITE_DFLOAT	memory.h	196;"	d
MEM_WRITE_HALF	memory.h	186;"	d
MEM_WRITE_QWORD	memory.h	200;"	d
MEM_WRITE_SBYTE	memory.h	185;"	d
MEM_WRITE_SFLOAT	memory.h	194;"	d
MEM_WRITE_SHALF	memory.h	188;"	d
MEM_WRITE_SQWORD	memory.h	202;"	d
MEM_WRITE_SWORD	memory.h	192;"	d
MEM_WRITE_WORD	memory.h	190;"	d
MIN	misc.h	74;"	d
MISC_H	misc.h	53;"	d
MSB	sysprobe.c	80;"	d	file:
NA	machine.h	90;"	d
NI	sim-scalar-cpen411.c	331;"	d	file:
NICE_DEFAULT_VALUE	main.c	151;"	d	file:
NL0	syscall.c	128;"	d	file:
NL0	syscall.c	180;"	d	file:
NL1	syscall.c	129;"	d	file:
NL1	syscall.c	181;"	d	file:
NOFLSH	syscall.c	143;"	d	file:
NUM_FLAGS	options.c	606;"	d	file:
NUM_FU_CLASSES	machine.h	/^  NUM_FU_CLASSES	\/* total functional unit classes *\/$/;"	e	enum:md_fu_class
NUM_IOCTL_BYTES	syscall.c	466;"	d	file:
N_ELT	misc.h	82;"	d
OFS	machine.h	330;"	d
OPTIONS_H	options.h	53;"	d
OP_MAX	machine.h	/^  OP_MAX	\/* number of opcodes + NA *\/$/;"	e	enum:md_opcode
OP_NA	machine.h	/^  OP_NA = 0,	\/* NA *\/$/;"	e	enum:md_opcode
OVER	machine.h	339;"	d
OVER	machine.h	773;"	d
PAD	misc.c	381;"	d	file:
PADZERO	misc.c	441;"	d	file:
PENDIN	syscall.c	146;"	d	file:
PF_ALL	stats.h	106;"	d
PF_CDF	stats.h	105;"	d
PF_COUNT	stats.h	103;"	d
PF_PDF	stats.h	104;"	d
PIPEDEPTH	sim-scalar-cpen411.c	/^    PIPEDEPTH$/;"	e	enum:pipeline_latch	file:
PISA_H	machine.h	53;"	d
POLYNOMIAL	misc.c	1144;"	d	file:
PUT	misc.c	370;"	d	file:
RANGE_H	range.h	53;"	d
RD	machine.h	307;"	d
READ_BYTE	sim-scalar-cpen411.c	251;"	d	file:
READ_HALF	sim-scalar-cpen411.c	253;"	d	file:
READ_QWORD	sim-scalar-cpen411.c	258;"	d	file:
READ_WORD	sim-scalar-cpen411.c	255;"	d	file:
REGS_H	regs.h	53;"	d
RELEVANT_SCOPE	symbol.c	199;"	d	file:
RESOURCE_H	resource.h	53;"	d
ROUND_DOWN	misc.h	86;"	d
ROUND_UP	misc.h	85;"	d
RS	machine.h	304;"	d
RS	machine.h	305;"	d
RT	machine.h	306;"	d
RZERO	misc.c	442;"	d	file:
RdPort	machine.h	/^  RdPort,		\/* memory read port *\/$/;"	e	enum:md_fu_class
Read	memory.h	/^  Read,			\/* read memory from target (simulated prog) to host *\/$/;"	e	enum:mem_cmd
Rfp	machine.h	742;"	d
Rgp	machine.h	740;"	d
Rsp	machine.h	741;"	d
SET_FCC	sim-scalar-cpen411.c	230;"	d	file:
SET_FPCR	sim-scalar-cpen411.c	242;"	d	file:
SET_FPR	sim-scalar-cpen411.c	238;"	d	file:
SET_FPR_D	sim-scalar-cpen411.c	222;"	d	file:
SET_FPR_F	sim-scalar-cpen411.c	220;"	d	file:
SET_FPR_L	sim-scalar-cpen411.c	218;"	d	file:
SET_FPR_Q	sim-scalar-cpen411.c	236;"	d	file:
SET_GPR	sim-scalar-cpen411.c	212;"	d	file:
SET_HI	sim-scalar-cpen411.c	225;"	d	file:
SET_LO	sim-scalar-cpen411.c	227;"	d	file:
SET_NPC	sim-scalar-cpen411.c	205;"	d	file:
SET_TPC	machine.h	350;"	d
SET_UNIQ	sim-scalar-cpen411.c	244;"	d	file:
SHAMT	machine.h	310;"	d
SIM_H	sim.h	53;"	d
SS_COMP_NOP	machine.h	715;"	d
SS_COMP_OP	machine.h	712;"	d
SS_COMP_POST_DBL_DEC	machine.h	721;"	d
SS_COMP_POST_DBL_INC	machine.h	720;"	d
SS_COMP_POST_DEC	machine.h	717;"	d
SS_COMP_POST_INC	machine.h	716;"	d
SS_COMP_PRE_DBL_DEC	machine.h	723;"	d
SS_COMP_PRE_DBL_INC	machine.h	722;"	d
SS_COMP_PRE_DEC	machine.h	719;"	d
SS_COMP_PRE_INC	machine.h	718;"	d
SS_IOCTL_TCGETA	syscall.c	446;"	d	file:
SS_IOCTL_TCGETP	syscall.c	445;"	d	file:
SS_IOCTL_TCSETAW	syscall.c	450;"	d	file:
SS_IOCTL_TIOCGETC	syscall.c	451;"	d	file:
SS_IOCTL_TIOCGETP	syscall.c	443;"	d	file:
SS_IOCTL_TIOCGLTC	syscall.c	447;"	d	file:
SS_IOCTL_TIOCGWINSZ	syscall.c	449;"	d	file:
SS_IOCTL_TIOCLBIC	syscall.c	453;"	d	file:
SS_IOCTL_TIOCLBIS	syscall.c	454;"	d	file:
SS_IOCTL_TIOCLGET	syscall.c	455;"	d	file:
SS_IOCTL_TIOCLSET	syscall.c	456;"	d	file:
SS_IOCTL_TIOCSETC	syscall.c	452;"	d	file:
SS_IOCTL_TIOCSETP	syscall.c	444;"	d	file:
SS_IOCTL_TIOCSLTC	syscall.c	448;"	d	file:
SS_NFLAGS	syscall.c	593;"	d	file:
SS_NUM_REGS	machine.h	704;"	d
SS_O_APPEND	syscall.c	547;"	d	file:
SS_O_CREAT	syscall.c	548;"	d	file:
SS_O_EXCL	syscall.c	550;"	d	file:
SS_O_NOCTTY	syscall.c	552;"	d	file:
SS_O_NONBLOCK	syscall.c	551;"	d	file:
SS_O_RDONLY	syscall.c	544;"	d	file:
SS_O_RDWR	syscall.c	546;"	d	file:
SS_O_SYNC	syscall.c	553;"	d	file:
SS_O_TRUNC	syscall.c	549;"	d	file:
SS_O_WRONLY	syscall.c	545;"	d	file:
SS_PAGE_SIZE	machine.h	701;"	d
SS_SYS_accept	syscall.c	328;"	d	file:
SS_SYS_access	syscall.c	261;"	d	file:
SS_SYS_acct	syscall.c	279;"	d	file:
SS_SYS_adjtime	syscall.c	371;"	d	file:
SS_SYS_async_daemon	syscall.c	408;"	d	file:
SS_SYS_atomic_op	syscall.c	389;"	d	file:
SS_SYS_audcntl	syscall.c	435;"	d	file:
SS_SYS_audgen	syscall.c	436;"	d	file:
SS_SYS_bind	syscall.c	334;"	d	file:
SS_SYS_brk	syscall.c	245;"	d	file:
SS_SYS_cachectl	syscall.c	388;"	d	file:
SS_SYS_cacheflush	syscall.c	387;"	d	file:
SS_SYS_chdir	syscall.c	240;"	d	file:
SS_SYS_chmod	syscall.c	243;"	d	file:
SS_SYS_chown	syscall.c	244;"	d	file:
SS_SYS_chroot	syscall.c	289;"	d	file:
SS_SYS_close	syscall.c	234;"	d	file:
SS_SYS_connect	syscall.c	327;"	d	file:
SS_SYS_creat	syscall.c	236;"	d	file:
SS_SYS_debug	syscall.c	392;"	d	file:
SS_SYS_dup	syscall.c	269;"	d	file:
SS_SYS_dup2	syscall.c	319;"	d	file:
SS_SYS_execv	syscall.c	239;"	d	file:
SS_SYS_execve	syscall.c	287;"	d	file:
SS_SYS_exit	machine.h	416;"	d
SS_SYS_exportfs	syscall.c	414;"	d	file:
SS_SYS_fchmod	syscall.c	354;"	d	file:
SS_SYS_fchown	syscall.c	353;"	d	file:
SS_SYS_fcntl	syscall.c	321;"	d	file:
SS_SYS_flock	syscall.c	361;"	d	file:
SS_SYS_fork	syscall.c	230;"	d	file:
SS_SYS_fstat	syscall.c	290;"	d	file:
SS_SYS_fstatfs	syscall.c	395;"	d	file:
SS_SYS_fsync	syscall.c	324;"	d	file:
SS_SYS_ftruncate	syscall.c	360;"	d	file:
SS_SYS_getdirentries	syscall.c	411;"	d	file:
SS_SYS_getdomainname	syscall.c	412;"	d	file:
SS_SYS_getdopt	syscall.c	320;"	d	file:
SS_SYS_getdtablesize	syscall.c	318;"	d	file:
SS_SYS_getfh	syscall.c	410;"	d	file:
SS_SYS_getgid	syscall.c	275;"	d	file:
SS_SYS_getgroups	syscall.c	307;"	d	file:
SS_SYS_gethostid	syscall.c	373;"	d	file:
SS_SYS_gethostname	syscall.c	316;"	d	file:
SS_SYS_getitimer	syscall.c	315;"	d	file:
SS_SYS_getmnt	syscall.c	428;"	d	file:
SS_SYS_getpagesize	syscall.c	292;"	d	file:
SS_SYS_getpeername	syscall.c	372;"	d	file:
SS_SYS_getpgrp	syscall.c	309;"	d	file:
SS_SYS_getpid	syscall.c	248;"	d	file:
SS_SYS_getpriority	syscall.c	329;"	d	file:
SS_SYS_getrlimit	syscall.c	375;"	d	file:
SS_SYS_getrusage	syscall.c	347;"	d	file:
SS_SYS_getsockname	syscall.c	381;"	d	file:
SS_SYS_getsockopt	syscall.c	348;"	d	file:
SS_SYS_getsysinfo	syscall.c	439;"	d	file:
SS_SYS_gettimeofday	syscall.c	346;"	d	file:
SS_SYS_getuid	syscall.c	252;"	d	file:
SS_SYS_hdwconf	syscall.c	401;"	d	file:
SS_SYS_ioctl	syscall.c	282;"	d	file:
SS_SYS_kill	syscall.c	265;"	d	file:
SS_SYS_killpg	syscall.c	377;"	d	file:
SS_SYS_link	syscall.c	237;"	d	file:
SS_SYS_listen	syscall.c	336;"	d	file:
SS_SYS_lockf	syscall.c	426;"	d	file:
SS_SYS_lseek	syscall.c	247;"	d	file:
SS_SYS_lstat	syscall.c	268;"	d	file:
SS_SYS_madvise	syscall.c	303;"	d	file:
SS_SYS_mincore	syscall.c	306;"	d	file:
SS_SYS_mkdir	syscall.c	366;"	d	file:
SS_SYS_mknod	syscall.c	242;"	d	file:
SS_SYS_mmap	syscall.c	299;"	d	file:
SS_SYS_mount	syscall.c	249;"	d	file:
SS_SYS_mprotect	syscall.c	302;"	d	file:
SS_SYS_mremap	syscall.c	293;"	d	file:
SS_SYS_msgctl	syscall.c	416;"	d	file:
SS_SYS_msgget	syscall.c	417;"	d	file:
SS_SYS_msgrcv	syscall.c	418;"	d	file:
SS_SYS_msgsnd	syscall.c	419;"	d	file:
SS_SYS_munmap	syscall.c	301;"	d	file:
SS_SYS_nfs_biod	syscall.c	407;"	d	file:
SS_SYS_nfs_getfh	syscall.c	409;"	d	file:
SS_SYS_nfs_svc	syscall.c	405;"	d	file:
SS_SYS_nfssvc	syscall.c	406;"	d	file:
SS_SYS_open	syscall.c	233;"	d	file:
SS_SYS_pipe	syscall.c	270;"	d	file:
SS_SYS_plock	syscall.c	425;"	d	file:
SS_SYS_profil	syscall.c	272;"	d	file:
SS_SYS_ptrace	syscall.c	254;"	d	file:
SS_SYS_quota	syscall.c	380;"	d	file:
SS_SYS_quotactl	syscall.c	398;"	d	file:
SS_SYS_read	syscall.c	231;"	d	file:
SS_SYS_readlink	syscall.c	286;"	d	file:
SS_SYS_readv	syscall.c	350;"	d	file:
SS_SYS_reboot	syscall.c	283;"	d	file:
SS_SYS_recv	syscall.c	331;"	d	file:
SS_SYS_recvfrom	syscall.c	355;"	d	file:
SS_SYS_recvmsg	syscall.c	343;"	d	file:
SS_SYS_rename	syscall.c	358;"	d	file:
SS_SYS_rmdir	syscall.c	367;"	d	file:
SS_SYS_sbrk	syscall.c	297;"	d	file:
SS_SYS_select	syscall.c	322;"	d	file:
SS_SYS_semctl	syscall.c	420;"	d	file:
SS_SYS_semget	syscall.c	421;"	d	file:
SS_SYS_semop	syscall.c	422;"	d	file:
SS_SYS_send	syscall.c	330;"	d	file:
SS_SYS_sendmsg	syscall.c	344;"	d	file:
SS_SYS_sendto	syscall.c	363;"	d	file:
SS_SYS_setdomainname	syscall.c	413;"	d	file:
SS_SYS_setdopt	syscall.c	323;"	d	file:
SS_SYS_setgroups	syscall.c	308;"	d	file:
SS_SYS_sethostid	syscall.c	374;"	d	file:
SS_SYS_sethostname	syscall.c	317;"	d	file:
SS_SYS_setitimer	syscall.c	311;"	d	file:
SS_SYS_setpgrp	syscall.c	310;"	d	file:
SS_SYS_setpriority	syscall.c	325;"	d	file:
SS_SYS_setquota	syscall.c	379;"	d	file:
SS_SYS_setregid	syscall.c	357;"	d	file:
SS_SYS_setreuid	syscall.c	356;"	d	file:
SS_SYS_setrlimit	syscall.c	376;"	d	file:
SS_SYS_setsid	syscall.c	430;"	d	file:
SS_SYS_setsockopt	syscall.c	335;"	d	file:
SS_SYS_setsysinfo	syscall.c	440;"	d	file:
SS_SYS_settimeofday	syscall.c	352;"	d	file:
SS_SYS_shmsys	syscall.c	424;"	d	file:
SS_SYS_shutdown	syscall.c	364;"	d	file:
SS_SYS_sigblock	syscall.c	339;"	d	file:
SS_SYS_sigcleanup	syscall.c	369;"	d	file:
SS_SYS_sigpause	syscall.c	341;"	d	file:
SS_SYS_sigpending	syscall.c	429;"	d	file:
SS_SYS_sigreturn	syscall.c	332;"	d	file:
SS_SYS_sigsetmask	syscall.c	340;"	d	file:
SS_SYS_sigstack	syscall.c	342;"	d	file:
SS_SYS_sigvec	syscall.c	338;"	d	file:
SS_SYS_socket	syscall.c	326;"	d	file:
SS_SYS_socketpair	syscall.c	365;"	d	file:
SS_SYS_sstk	syscall.c	298;"	d	file:
SS_SYS_startcpu	syscall.c	437;"	d	file:
SS_SYS_stat	syscall.c	266;"	d	file:
SS_SYS_statfs	syscall.c	394;"	d	file:
SS_SYS_stopcpu	syscall.c	438;"	d	file:
SS_SYS_swapon	syscall.c	314;"	d	file:
SS_SYS_symlink	syscall.c	285;"	d	file:
SS_SYS_sync	syscall.c	264;"	d	file:
SS_SYS_syscall	syscall.c	228;"	d	file:
SS_SYS_sysmips	syscall.c	383;"	d	file:
SS_SYS_truncate	syscall.c	359;"	d	file:
SS_SYS_umask	syscall.c	288;"	d	file:
SS_SYS_umount	syscall.c	250;"	d	file:
SS_SYS_uname	syscall.c	423;"	d	file:
SS_SYS_unlink	syscall.c	238;"	d	file:
SS_SYS_unmount	syscall.c	396;"	d	file:
SS_SYS_ustat	syscall.c	427;"	d	file:
SS_SYS_utc_adjtime	syscall.c	434;"	d	file:
SS_SYS_utc_gettime	syscall.c	433;"	d	file:
SS_SYS_utimes	syscall.c	368;"	d	file:
SS_SYS_vadvise	syscall.c	300;"	d	file:
SS_SYS_vfork	syscall.c	294;"	d	file:
SS_SYS_vhangup	syscall.c	304;"	d	file:
SS_SYS_wait	syscall.c	313;"	d	file:
SS_SYS_wait3	syscall.c	312;"	d	file:
SS_SYS_waitpid	syscall.c	431;"	d	file:
SS_SYS_write	machine.h	420;"	d
SS_SYS_writev	syscall.c	351;"	d	file:
SS_TOTAL_REGS	machine.h	707;"	d
STAT_H	stats.h	53;"	d
SWAP_HALF	endian.h	56;"	d
SWAP_QWORD	endian.h	62;"	d
SWAP_WORD	endian.h	58;"	d
SYMBOL_H	symbol.h	53;"	d
SYMCAT	host.h	71;"	d
SYMCAT	host.h	75;"	d
SYMCAT	host.h	77;"	d
SYSCALL	sim-scalar-cpen411.c	274;"	d	file:
SYSCALL_H	syscall.h	53;"	d
TAB0	syscall.c	134;"	d	file:
TAB0	syscall.c	186;"	d	file:
TAB1	syscall.c	135;"	d	file:
TAB1	syscall.c	187;"	d	file:
TAB2	syscall.c	136;"	d	file:
TALIGN	machine.h	770;"	d
TALIGN	machine.h	778;"	d
TARG	machine.h	324;"	d
TARGET_PISA	machine.h	68;"	d
TARGET_PISA_BIG	machine.h	74;"	d
TARGET_PISA_LITTLE	machine.h	76;"	d
TEXT_TAIL_PADDING	loader.c	72;"	d	file:
TOSTOP	syscall.c	144;"	d	file:
TRUE	misc.h	63;"	d
UIMM	machine.h	321;"	d
ULL	host.h	102;"	d
ULL	host.h	110;"	d
ULL	host.h	113;"	d
ULL	host.h	120;"	d
ULL	host.h	99;"	d
ULL_MAX	misc.c	785;"	d	file:
UNDER	machine.h	344;"	d
UNDER	machine.h	774;"	d
UNIQ	sim-scalar-cpen411.c	243;"	d	file:
VER_MAJOR	version.h	60;"	d
VER_MINOR	version.h	61;"	d
VER_TARGET	version.h	53;"	d
VER_TARGET	version.h	55;"	d
VER_UPDATE	version.h	63;"	d
WL_BASE	machine.h	356;"	d
WL_BASE	machine.h	370;"	d
WL_BASE	machine.h	389;"	d
WL_BASE	machine.h	399;"	d
WL_PROT_MASK	machine.h	357;"	d
WL_PROT_MASK	machine.h	371;"	d
WL_PROT_MASK	machine.h	390;"	d
WL_PROT_MASK1	machine.h	358;"	d
WL_PROT_MASK1	machine.h	372;"	d
WL_PROT_MASK1	machine.h	400;"	d
WL_PROT_MASK2	machine.h	359;"	d
WL_PROT_MASK2	machine.h	373;"	d
WL_PROT_MASK2	machine.h	401;"	d
WL_SIZE	machine.h	355;"	d
WL_SIZE	machine.h	369;"	d
WL_SIZE	machine.h	388;"	d
WL_SIZE	machine.h	398;"	d
WRITE_BYTE	sim-scalar-cpen411.c	262;"	d	file:
WRITE_HALF	sim-scalar-cpen411.c	264;"	d	file:
WRITE_QWORD	sim-scalar-cpen411.c	269;"	d	file:
WRITE_WORD	sim-scalar-cpen411.c	266;"	d	file:
WR_BASE	machine.h	363;"	d
WR_BASE	machine.h	377;"	d
WR_BASE	machine.h	394;"	d
WR_BASE	machine.h	405;"	d
WR_PROT_MASK	machine.h	364;"	d
WR_PROT_MASK	machine.h	378;"	d
WR_PROT_MASK	machine.h	395;"	d
WR_PROT_MASK1	machine.h	365;"	d
WR_PROT_MASK1	machine.h	379;"	d
WR_PROT_MASK1	machine.h	406;"	d
WR_PROT_MASK2	machine.h	366;"	d
WR_PROT_MASK2	machine.h	380;"	d
WR_PROT_MASK2	machine.h	407;"	d
WR_SIZE	machine.h	362;"	d
WR_SIZE	machine.h	376;"	d
WR_SIZE	machine.h	393;"	d
WR_SIZE	machine.h	404;"	d
WrPort	machine.h	/^  WrPort,		\/* memory write port *\/$/;"	e	enum:md_fu_class
Write	memory.h	/^  Write			\/* write memory from host (simulator) to target *\/$/;"	e	enum:mem_cmd
XTABS	syscall.c	137;"	d	file:
XTABS	syscall.c	197;"	d	file:
XX	machine.c	687;"	d	file:
X_OK	sysprobe.c	58;"	d	file:
__UNCHK_MEM_READ	memory.h	157;"	d
__UNCHK_MEM_WRITE	memory.h	167;"	d
__opt_process_options	options.c	/^__opt_process_options(struct opt_odb_t *odb,	\/* option data base *\/$/;"	f	file:
_debug	misc.c	/^_debug(char *file, char *func, int line, char *fmt, ...)$/;"	f
_fatal	misc.c	/^_fatal(char *file, char *func, int line, char *fmt, ...)$/;"	f
_info	misc.c	/^_info(char *file, char *func, int line, char *fmt, ...)$/;"	f
_lowdigit	misc.c	/^_lowdigit(slargeint_t *valptr)$/;"	f	file:
_panic	misc.c	/^_panic(char *file, char *func, int line, char *fmt, ...)$/;"	f
_warn	misc.c	/^_warn(char *file, char *func, int line, char *fmt, ...)$/;"	f
a	machine.h	/^  word_t a;		\/* simplescalar opcode (must be unsigned) *\/$/;"	m	struct:
a_double	eval.c	/^static struct eval_value_t a_double;$/;"	v	file:
a_float	eval.c	/^static struct eval_value_t a_float;$/;"	v	file:
a_symbol	eval.c	/^static struct eval_value_t a_symbol;$/;"	v	file:
a_uint	eval.c	/^static struct eval_value_t a_uint;$/;"	v	file:
access	syscall.c	203;"	d	file:
access	sysprobe.c	57;"	d	file:
accrue	options.h	/^  int accrue;			\/* accrue list across uses *\/$/;"	m	struct:opt_opt_t
acmp	symbol.c	/^acmp(struct sym_sym_t **sym1, struct sym_sym_t **sym2)$/;"	f	file:
add_option	options.c	/^add_option(struct opt_odb_t *odb,	\/* option database *\/$/;"	f	file:
add_stat	stats.c	/^add_stat(struct stat_sdb_t *sdb,	\/* stat database *\/$/;"	f	file:
addr	eio.c	/^  md_addr_t addr;$/;"	m	struct:mem_rec_t	file:
addr	symbol.h	/^  md_addr_t addr;		\/* symbol address value *\/$/;"	m	struct:sym_sym_t
alloc_inst	sim-scalar-cpen411.c	/^inst_t *alloc_inst()$/;"	f
an_int	eval.c	/^static struct eval_value_t an_int;$/;"	v	file:
arr	stats.h	/^      unsigned int *arr;	\/* non-sparse array pointer *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_dist_t
arr_sz	stats.h	/^      unsigned int arr_sz;	\/* array size *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_dist_t
as_addr	eval.h	/^    md_addr_t as_addr;			\/* value for type == et_addr *\/$/;"	m	union:eval_value_t::<anonymous>
as_double	eval.h	/^    double as_double;			\/* value for type == et_double *\/$/;"	m	union:eval_value_t::<anonymous>
as_float	eval.h	/^    float as_float;			\/* value for type == et_float *\/$/;"	m	union:eval_value_t::<anonymous>
as_int	eval.h	/^    int as_int;				\/* value for type == et_int *\/$/;"	m	union:eval_value_t::<anonymous>
as_qword	eval.h	/^    qword_t as_qword;			\/* value for type == ec_qword *\/$/;"	m	union:eval_value_t::<anonymous>
as_sqword	eval.h	/^    sqword_t as_sqword;			\/* value for type == ec_sqword *\/$/;"	m	union:eval_value_t::<anonymous>
as_symbol	eval.h	/^    char *as_symbol;			\/* value for type == et_symbol *\/$/;"	m	union:eval_value_t::<anonymous>
as_uint	eval.h	/^    unsigned int as_uint;		\/* value for type == et_uint *\/$/;"	m	union:eval_value_t::<anonymous>
b	machine.h	/^  word_t b;		\/* simplescalar unsigned immediate fields *\/$/;"	m	struct:
banner	main.c	/^banner(FILE *fd, int argc, char **argv)$/;"	f	file:
bind_to_enum	options.c	/^bind_to_enum(char *str,			\/* string to bind to an enum *\/$/;"	f	file:
bind_to_str	options.c	/^bind_to_str(int val,			\/* enumeration value *\/$/;"	f	file:
blob	eio.c	/^  struct exo_term_t *blob;$/;"	m	struct:mem_rec_t	file:
bool_t	host.h	/^typedef int bool_t;			\/* generic boolean type *\/$/;"	t
bucket_sz	stats.h	/^      unsigned int bucket_sz;	\/* array bucket size *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_dist_t
bucket_t	stats.h	/^struct bucket_t {$/;"	s
builtin_options	options.c	/^static struct opt_opt_t *builtin_options = &config_opt;$/;"	v	file:
busy	resource.h	/^  int busy;				\/* non-zero if this unit is busy *\/$/;"	m	struct:res_desc
byte_t	host.h	/^typedef unsigned char byte_t;		\/* byte - 8 bits *\/$/;"	t
chdir	options.c	57;"	d	file:
chdir	syscall.c	205;"	d	file:
chmod	syscall.c	204;"	d	file:
close	syscall.c	217;"	d	file:
cmd	misc.c	/^  char *cmd;$/;"	m	struct:	file:
compare_fn	stats.c	/^compare_fn(void *p1, void *p2)$/;"	f	file:
config_opt	options.c	/^static struct opt_opt_t config_opt =$/;"	v	file:
constant	eval.c	/^constant(struct eval_state_t *es)	\/* expression evaluator *\/$/;"	f	file:
count	stats.h	/^  unsigned int count;		\/* bucket count *\/$/;"	m	struct:bucket_t
counter_t	host.h	/^typedef dfloat_t counter_t;$/;"	t
counter_t	host.h	/^typedef sqword_t counter_t;$/;"	t
crc	misc.c	/^crc(word_t crc_accum, word_t data)$/;"	f
crc_gentab	misc.c	/^crc_gentab(void)$/;"	f	file:
crc_init	misc.c	/^static int crc_init = FALSE;$/;"	v	file:
crc_table	misc.c	/^static unsigned long crc_table[256];$/;"	v	file:
creat	syscall.c	208;"	d	file:
d	machine.h	/^  dfloat_t d[MD_NUM_FREGS\/2];	\/* double-prediction floating point view *\/$/;"	m	union:
debug	misc.h	/^static void debug(char *fmt, ...) {}$/;"	f
debug	misc.h	154;"	d
debug	misc.h	170;"	d
debugging	misc.c	/^int debugging = FALSE;$/;"	v
decode	sim-scalar-cpen411.c	/^void decode(void)$/;"	f
desc	options.h	/^  char *desc;			\/* option description *\/$/;"	m	struct:opt_opt_t
desc	stats.h	/^  char *desc;			\/* stat description *\/$/;"	m	struct:stat_stat_t
dfloat_t	host.h	/^typedef double dfloat_t;		\/* double-precision float - 64 bits *\/$/;"	t
display_pipeline	sim-scalar-cpen411.c	/^void display_pipeline()$/;"	f
donecycle	sim-scalar-cpen411.c	/^    unsigned     donecycle; \/\/ cycle when destination operand(s) generated$/;"	m	struct:Inst	file:
dst	sim-scalar-cpen411.c	/^    int          dst[2];    \/\/ registers written by this instruction$/;"	m	struct:Inst	file:
dump_config	options.c	/^dump_config(struct opt_odb_t *odb,	\/* option data base *\/$/;"	f	file:
dumpconfig_opt	options.c	/^static struct opt_opt_t dumpconfig_opt =$/;"	v	file:
dup	syscall.c	210;"	d	file:
dup2	syscall.c	211;"	d	file:
cpen411_init	sim-scalar-cpen411.c	/^void cpen411_init()$/;"	f
eio_close	eio.c	/^eio_close(FILE *fd)$/;"	f
eio_create	eio.c	/^eio_create(char *fname)$/;"	f
eio_fast_forward	eio.c	/^eio_fast_forward(FILE *eio_fd, counter_t icnt)$/;"	f
eio_open	eio.c	/^eio_open(char *fname)$/;"	f
eio_read_chkpt	eio.c	/^eio_read_chkpt(struct regs_t *regs,		\/* regs to dump *\/$/;"	f
eio_read_trace	eio.c	/^eio_read_trace(FILE *eio_fd,			\/* EIO stream file desc *\/$/;"	f
eio_trans_icnt	eio.c	/^static counter_t eio_trans_icnt = -1;$/;"	v	file:
eio_valid	eio.c	/^eio_valid(char *fname)$/;"	f
eio_write_chkpt	eio.c	/^eio_write_chkpt(struct regs_t *regs,		\/* regs to dump *\/$/;"	f
eio_write_trace	eio.c	/^eio_write_trace(FILE *eio_fd,			\/* EIO stream file desc *\/$/;"	f
elapsed_time	misc.c	/^elapsed_time(long sec)$/;"	f
emap	options.h	/^      char **emap;		\/* array of enum strings *\/$/;"	m	struct:opt_opt_t::opt_variant_t::opt_for_enum_t
emap_sz	options.h	/^      int emap_sz;		\/* number of enum's in arrays *\/$/;"	m	struct:opt_opt_t::opt_variant_t::opt_for_enum_t
end	range.h	/^  struct range_pos_t end;$/;"	m	struct:range_range_t
endian_big	endian.h	/^enum endian_t { endian_big, endian_little, endian_unknown};$/;"	e	enum:endian_t
endian_host_byte_order	endian.c	/^endian_host_byte_order(void)$/;"	f
endian_host_word_order	endian.c	/^endian_host_word_order(void)$/;"	f
endian_little	endian.h	/^enum endian_t { endian_big, endian_little, endian_unknown};$/;"	e	enum:endian_t
endian_t	endian.h	/^enum endian_t { endian_big, endian_little, endian_unknown};$/;"	g
endian_target_byte_order	endian.c	/^endian_target_byte_order(void)$/;"	f
endian_target_word_order	endian.c	/^endian_target_word_order(void)$/;"	f
endian_unknown	endian.h	/^enum endian_t { endian_big, endian_little, endian_unknown};$/;"	e	enum:endian_t
err_value	eval.c	/^static struct eval_value_t err_value = { et_int, { 0 } };$/;"	v	file:
et_NUM	eval.h	/^  et_NUM$/;"	e	enum:eval_type_t
et_addr	eval.h	/^  et_addr,			\/* address value *\/$/;"	e	enum:eval_type_t
et_double	eval.h	/^  et_double,			\/* double-precision floating point value *\/$/;"	e	enum:eval_type_t
et_float	eval.h	/^  et_float,			\/* single-precision floating point value *\/$/;"	e	enum:eval_type_t
et_int	eval.h	/^  et_int,			\/* signed integer result *\/$/;"	e	enum:eval_type_t
et_qword	eval.h	/^  et_qword,			\/* unsigned qword length integer result *\/$/;"	e	enum:eval_type_t
et_sqword	eval.h	/^  et_sqword,			\/* signed qword length integer result *\/$/;"	e	enum:eval_type_t
et_symbol	eval.h	/^  et_symbol,			\/* non-numeric result (!allowed in exprs)*\/$/;"	e	enum:eval_type_t
et_uint	eval.h	/^  et_uint,			\/* unsigned integer result *\/$/;"	e	enum:eval_type_t
eval	options.h	/^      int *eval;		\/* optional array of enum values *\/$/;"	m	struct:opt_opt_t::opt_variant_t::opt_for_enum_t
eval_as_addr	eval.c	/^eval_as_addr(struct eval_value_t val)$/;"	f
eval_as_double	eval.c	/^eval_as_double(struct eval_value_t val)$/;"	f
eval_as_float	eval.c	/^eval_as_float(struct eval_value_t val)$/;"	f
eval_as_int	eval.c	/^eval_as_int(struct eval_value_t val)$/;"	f
eval_as_qword	eval.c	/^eval_as_qword(struct eval_value_t val)$/;"	f
eval_as_sqword	eval.c	/^eval_as_sqword(struct eval_value_t val)$/;"	f
eval_as_uint	eval.c	/^eval_as_uint(struct eval_value_t val)$/;"	f
eval_delete	eval.c	/^eval_delete(struct eval_state_t *es)	\/* evaluator to delete *\/$/;"	f
eval_err_str	eval.c	/^char *eval_err_str[ERR_NUM] = {$/;"	v
eval_err_t	eval.h	/^enum eval_err_t {$/;"	g
eval_error	eval.c	/^enum eval_err_t eval_error = ERR_NOERR;$/;"	v
eval_expr	eval.c	/^eval_expr(struct eval_state_t *es,	\/* expression evaluator *\/$/;"	f
eval_ident_t	eval.h	/^(*eval_ident_t)(struct eval_state_t *es); \/* ident string in es->tok_buf *\/$/;"	t
eval_new	eval.c	/^eval_new(eval_ident_t f_eval_ident,	\/* user ident evaluator *\/$/;"	f
eval_print	eval.c	/^eval_print(FILE *stream,		\/* output stream *\/$/;"	f
eval_state_t	eval.h	/^struct eval_state_t {$/;"	s
eval_token_t	eval.h	/^enum eval_token_t {$/;"	g
eval_type_str	eval.c	/^char *eval_type_str[et_NUM] = {$/;"	v
eval_type_t	eval.h	/^enum eval_type_t {$/;"	g
eval_value_t	eval.h	/^struct eval_value_t {$/;"	s
evaluator	stats.h	/^  struct eval_state_t *evaluator;	\/* an expression evaluator *\/$/;"	m	struct:stat_sdb_t
exec_index	main.c	/^static int exec_index = -1;$/;"	v	file:
execute	sim-scalar-cpen411.c	/^void execute()$/;"	f
exit_now	main.c	/^exit_now(int exit_code)$/;"	f	file:
exo	eio.c	/^  struct exo_term_t *exo;$/;"	m	struct:mem_rec_t	file:
exo_address_t	machine.h	/^typedef qword_t exo_address_t;$/;"	t
exo_float_t	machine.h	/^typedef double exo_float_t;$/;"	t
exo_integer_t	machine.h	/^typedef qword_t exo_integer_t;$/;"	t
expr	eval.c	/^expr(struct eval_state_t *es)		\/* expression evaluator *\/$/;"	f	file:
ext	misc.c	/^  char *ext;$/;"	m	struct:	file:
extractl	misc.c	/^extractl(int word,		\/* the word from which to extract *\/$/;"	f
f	machine.h	/^  sfloat_t f[MD_NUM_FREGS];	\/* single-precision floating point view *\/$/;"	m	union:
f_add	eval.c	/^f_add(struct eval_value_t val1, struct eval_value_t val2)$/;"	f	file:
f_div	eval.c	/^f_div(struct eval_value_t val1, struct eval_value_t val2)$/;"	f	file:
f_eq_zero	eval.c	/^f_eq_zero(struct eval_value_t val1)$/;"	f	file:
f_eval_ident	eval.h	/^  eval_ident_t f_eval_ident;	\/* identifier evaluator *\/$/;"	m	struct:eval_state_t
f_mult	eval.c	/^f_mult(struct eval_value_t val1, struct eval_value_t val2)$/;"	f	file:
f_neg	eval.c	/^f_neg(struct eval_value_t val1)$/;"	f	file:
f_orphan_fn	options.c	/^f_orphan_fn(int i, int argc, char **argv)$/;"	f
f_sub	eval.c	/^f_sub(struct eval_value_t val1, struct eval_value_t val2)$/;"	f	file:
factor	eval.c	/^factor(struct eval_state_t *es)		\/* expression evaluator *\/$/;"	f	file:
fast_SRA	sysprobe.c	/^fast_SRA(void)$/;"	f
fast_SRL	sysprobe.c	/^fast_SRL(void)$/;"	f
fatal	misc.h	102;"	d
fatal_hook	misc.c	/^fatal_hook(void (*fn)(FILE *stream))	\/* fatal hook function *\/$/;"	f
fcc	machine.h	/^  int fcc;			\/* floating point condition codes *\/$/;"	m	struct:
fetch	sim-scalar-cpen411.c	/^void fetch(void)$/;"	f
file	machine.h	/^  enum md_reg_type file;	\/* register file *\/$/;"	m	struct:md_reg_names_t
fixpcs	sim-scalar-cpen411.c	/^void fixpcs(void)$/;"	f
flag_emap	options.c	/^static char *flag_emap[NUM_FLAGS] = {$/;"	v	file:
flag_eval	options.c	/^static int flag_eval[NUM_FLAGS] = {$/;"	v	file:
flags2str	symbol.c	/^flags2str(unsigned int flags)	\/* bfd symbol flags *\/$/;"	f	file:
for_counter	machine.h	572;"	d
for_counter	machine.h	576;"	d
for_dist	stats.h	/^    } for_dist;$/;"	m	union:stat_stat_t::stat_variant_t
for_double	options.h	/^    } for_double;$/;"	m	union:opt_opt_t::opt_variant_t
for_double	stats.h	/^    } for_double;$/;"	m	union:stat_stat_t::stat_variant_t
for_enum	options.h	/^    } for_enum;$/;"	m	union:opt_opt_t::opt_variant_t
for_float	options.h	/^    } for_float;$/;"	m	union:opt_opt_t::opt_variant_t
for_float	stats.h	/^    } for_float;$/;"	m	union:stat_stat_t::stat_variant_t
for_formula	stats.h	/^    } for_formula;$/;"	m	union:stat_stat_t::stat_variant_t
for_int	options.h	/^    } for_int;$/;"	m	union:opt_opt_t::opt_variant_t
for_int	stats.h	/^    } for_int;$/;"	m	union:stat_stat_t::stat_variant_t
for_qword	stats.h	/^    } for_qword;$/;"	m	union:stat_stat_t::stat_variant_t
for_sdist	stats.h	/^    } for_sdist;$/;"	m	union:stat_stat_t::stat_variant_t
for_sqword	stats.h	/^    } for_sqword;$/;"	m	union:stat_stat_t::stat_variant_t
for_string	options.h	/^    } for_string;$/;"	m	union:opt_opt_t::opt_variant_t
for_uint	options.h	/^    } for_uint;$/;"	m	union:opt_opt_t::opt_variant_t
for_uint	stats.h	/^    } for_uint;$/;"	m	union:stat_stat_t::stat_variant_t
format	options.h	/^  char *format;			\/* option value print format *\/$/;"	m	struct:opt_opt_t
format	stats.h	/^  char *format;			\/* stat output print format *\/$/;"	m	struct:stat_stat_t
formula	stats.h	/^      char *formula;		\/* stat formula, see eval.h for format *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_formula_t
free_inst	sim-scalar-cpen411.c	/^void free_inst( inst_t *x )$/;"	f
fstat	syscall.c	213;"	d	file:
g_fetch_pc	sim-scalar-cpen411.c	/^md_addr_t g_fetch_pc = 0;$/;"	v
g_head	sim-scalar-cpen411.c	/^inst_t *g_head, *g_tail;$/;"	v
g_inst	sim-scalar-cpen411.c	/^inst_t g_inst[NI];$/;"	v
g_misfetch	sim-scalar-cpen411.c	/^int       g_misfetch;$/;"	v
g_next_inst	sim-scalar-cpen411.c	/^inst_t   *g_next_inst = NULL;$/;"	v
g_pipelatch	sim-scalar-cpen411.c	/^inst_t   *g_pipelatch[PIPEDEPTH];$/;"	v
g_raw	sim-scalar-cpen411.c	/^inst_t   *g_raw[MD_TOTAL_REGS];     \/\/ track register dependencies$/;"	v
g_resolve_at_decode	sim-scalar-cpen411.c	/^int       g_resolve_at_decode=1; $/;"	v
g_tail	sim-scalar-cpen411.c	/^inst_t *g_head, *g_tail;$/;"	v
g_uid	sim-scalar-cpen411.c	/^unsigned g_uid = 1;$/;"	v
get_next_token	eval.c	/^get_next_token(struct eval_state_t *es)	\/* expression evaluator *\/$/;"	f	file:
getcore	misc.c	/^getcore(int nbytes)$/;"	f
getcwd	options.c	58;"	d	file:
getpid	syscall.c	218;"	d	file:
gzclose	misc.c	/^gzclose(FILE *fd)$/;"	f
gzcmds	misc.c	/^} gzcmds[] = {$/;"	v	file:
gzip_paths	sysprobe.c	/^char *gzip_paths[] =$/;"	v
gzopen	misc.c	/^gzopen(char *fname, char *type)$/;"	f
half_t	host.h	/^typedef unsigned short half_t;		\/* half - 16 bits *\/$/;"	t
header	options.h	/^  char *header;			\/* options header *\/$/;"	m	struct:opt_odb_t
help_me	main.c	/^static int help_me;$/;"	v	file:
hi	machine.h	/^  sword_t hi, lo;		\/* multiplier HI\/LO result registers *\/$/;"	m	struct:
hook_fn	misc.c	/^static void (*hook_fn)(FILE *stream) = NULL;$/;"	v	file:
imap	stats.h	/^      char **imap;		\/* index -> string map *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_dist_t
index	stats.h	/^  md_addr_t index;		\/* bucket index - as large as an addr *\/$/;"	m	struct:bucket_t
info	misc.h	140;"	d
init_pool	sim-scalar-cpen411.c	/^void init_pool()$/;"	f
init_quit	main.c	/^static int init_quit;$/;"	v	file:
init_tok_map	eval.c	/^init_tok_map(void)$/;"	f	file:
init_val	stats.h	/^      double init_val;		\/* initial double value *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_double_t
init_val	stats.h	/^      float init_val;		\/* initial float value *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_float_t
init_val	stats.h	/^      int init_val;		\/* initial integer value *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_int_t
init_val	stats.h	/^      qword_t init_val;		\/* qword integer value *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_qword_t
init_val	stats.h	/^      sqword_t init_val;	\/* signed qword integer value *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_sqword_t
init_val	stats.h	/^      unsigned int init_val;	\/* initial dist value *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_dist_t
init_val	stats.h	/^      unsigned int init_val;	\/* initial dist value *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_sdist_t
init_val	stats.h	/^      unsigned int init_val;	\/* initial unsigned integer value *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_uint_t
initialized	symbol.h	/^  int initialized;		\/* initialized? (if data segment) *\/$/;"	m	struct:sym_sym_t
input_mem	eio.c	/^static struct exo_term_t *input_mem;$/;"	v	file:
input_mem_rec	eio.c	/^static struct mem_rec_t input_mem_rec;$/;"	v	file:
input_regs	eio.c	/^static struct exo_term_t *input_regs;$/;"	v	file:
inst	sim-scalar-cpen411.c	/^    md_inst_t    inst;$/;"	m	struct:Inst	file:
inst_t	sim-scalar-cpen411.c	/^} inst_t;$/;"	t	file:
inst_valid	sim-scalar-cpen411.c	/^    int          inst_valid;$/;"	m	struct:Inst	file:
instruction_status	sim-scalar-cpen411.c	/^enum instruction_status {$/;"	g	file:
issuelat	resource.h	/^    int issuelat;			\/* issue latency: number of cycles$/;"	m	struct:res_desc::res_template
l	machine.h	/^  sword_t l[MD_NUM_FREGS];	\/* integer word view *\/$/;"	m	union:
largeint_t	misc.c	/^typedef qword_t largeint_t;$/;"	t	file:
largeint_t	misc.c	/^typedef word_t largeint_t;$/;"	t	file:
lastp	eval.h	/^  char *lastp;			\/* save space for token peeks *\/$/;"	m	struct:eval_state_t
ld_brk_point	loader.c	/^md_addr_t ld_brk_point = 0;$/;"	v
ld_data_base	loader.c	/^md_addr_t ld_data_base = 0;$/;"	v
ld_data_size	loader.c	/^unsigned int ld_data_size = 0;$/;"	v
ld_environ_base	loader.c	/^md_addr_t ld_environ_base = 0;$/;"	v
ld_load_prog	loader.c	/^ld_load_prog(char *fname,		\/* program to load *\/$/;"	f
ld_prog_entry	loader.c	/^md_addr_t ld_prog_entry = 0;$/;"	v
ld_prog_fname	loader.c	/^char *ld_prog_fname = NULL;$/;"	v
ld_reg_stats	loader.c	/^ld_reg_stats(struct stat_sdb_t *sdb)	\/* stats data base *\/$/;"	f
ld_stack_base	loader.c	/^md_addr_t ld_stack_base = MD_STACK_BASE;$/;"	v
ld_stack_min	loader.c	/^md_addr_t ld_stack_min = (md_addr_t)-1;$/;"	v
ld_stack_size	loader.c	/^unsigned int ld_stack_size = 0;$/;"	v
ld_target_big_endian	loader.c	/^int ld_target_big_endian;$/;"	v
ld_text_base	loader.c	/^md_addr_t ld_text_base = 0;$/;"	v
ld_text_size	loader.c	/^unsigned int ld_text_size = 0;$/;"	v
lo	machine.h	/^  sword_t hi, lo;		\/* multiplier HI\/LO result registers *\/$/;"	m	struct:
local	symbol.h	/^  int local;			\/* compiler local symbol? *\/$/;"	m	struct:sym_sym_t
local_flag	syscall.c	/^  int local_flag;$/;"	m	struct:	file:
local_mem_fn	eio.c	/^static mem_access_fn local_mem_fn;$/;"	v	file:
log_base2	misc.c	/^log_base2(int n)$/;"	f
longjmp	host.h	137;"	d
lseek	syscall.c	214;"	d	file:
main	eval.c	/^main(void)$/;"	f
main	main.c	/^main(int argc, char **argv, char **envp)$/;"	f
main	options.c	/^main(int argc, char **argv)$/;"	f
main	stats.c	/^main(void)$/;"	f
main	sysprobe.c	/^main(int argc, char **argv)$/;"	f
master	resource.h	/^    struct res_desc *master;		\/* master resource record *\/$/;"	m	struct:res_desc::res_template
max_insts	sim-scalar-cpen411.c	/^static unsigned int max_insts;$/;"	v	file:
maxsize	eio.c	/^  unsigned size, maxsize;$/;"	m	struct:mem_rec_t	file:
md_addr_t	machine.h	/^typedef word_t md_addr_t;$/;"	t
md_amode_NUM	machine.h	/^  md_amode_NUM$/;"	e	enum:md_amode_type
md_amode_disp	machine.h	/^  md_amode_disp,	\/* (reg + const) addressing *\/$/;"	e	enum:md_amode_type
md_amode_fp	machine.h	/^  md_amode_fp,		\/* stack access through frame pointer *\/$/;"	e	enum:md_amode_type
md_amode_gp	machine.h	/^  md_amode_gp,		\/* global data access through global pointer *\/$/;"	e	enum:md_amode_type
md_amode_imm	machine.h	/^  md_amode_imm,		\/* immediate addressing mode *\/$/;"	e	enum:md_amode_type
md_amode_rr	machine.h	/^  md_amode_rr,		\/* (reg + reg) addressing *\/$/;"	e	enum:md_amode_type
md_amode_sp	machine.h	/^  md_amode_sp,		\/* stack access through stack pointer *\/$/;"	e	enum:md_amode_type
md_amode_str	machine.c	/^char *md_amode_str[md_amode_NUM] =$/;"	v
md_amode_type	machine.h	/^enum md_amode_type {$/;"	g
md_crc_regs	machine.c	/^md_crc_regs(struct regs_t *regs)$/;"	f
md_ctrl_t	machine.h	/^} md_ctrl_t;$/;"	t
md_fault_access	machine.h	/^  md_fault_access,		\/* storage access fault *\/$/;"	e	enum:md_fault_type
md_fault_alignment	machine.h	/^  md_fault_alignment,		\/* storage alignment fault *\/$/;"	e	enum:md_fault_type
md_fault_break	machine.h	/^  md_fault_break,		\/* BREAK instruction fault *\/$/;"	e	enum:md_fault_type
md_fault_div0	machine.h	/^  md_fault_div0,		\/* division by zero fault *\/$/;"	e	enum:md_fault_type
md_fault_internal	machine.h	/^  md_fault_internal		\/* internal S\/W fault *\/$/;"	e	enum:md_fault_type
md_fault_none	machine.h	/^  md_fault_none = 0,		\/* no fault *\/$/;"	e	enum:md_fault_type
md_fault_overflow	machine.h	/^  md_fault_overflow,		\/* signed arithmetic overflow fault *\/$/;"	e	enum:md_fault_type
md_fault_type	machine.h	/^enum md_fault_type {$/;"	g
md_fault_unimpl	machine.h	/^  md_fault_unimpl,		\/* unimplemented instruction fault *\/$/;"	e	enum:md_fault_type
md_fpr_t	machine.h	/^} md_fpr_t;$/;"	t
md_fu2name	machine.c	/^char *md_fu2name[NUM_FU_CLASSES] = {$/;"	v
md_fu_class	machine.h	/^enum md_fu_class {$/;"	g
md_gpr_t	machine.h	/^typedef sword_t md_gpr_t[MD_NUM_IREGS];$/;"	t
md_init_decoder	machine.c	/^md_init_decoder(void)$/;"	f
md_inst_t	machine.h	/^} md_inst_t;$/;"	t
md_lr_masks	machine.c	/^word_t md_lr_masks[] = {$/;"	v
md_mask2op	machine.c	/^enum md_opcode md_mask2op[MD_MAX_MASK+1];$/;"	v
md_op2flags	machine.c	/^unsigned int md_op2flags[OP_MAX] = {$/;"	v
md_op2format	machine.c	/^char *md_op2format[OP_MAX] = {$/;"	v
md_op2fu	machine.c	/^enum md_fu_class md_op2fu[OP_MAX] = {$/;"	v
md_op2name	machine.c	/^char *md_op2name[OP_MAX] = {$/;"	v
md_opcode	machine.h	/^enum md_opcode {$/;"	g
md_print_creg	machine.c	/^md_print_creg(md_ctrl_t regs, int reg, FILE *stream)$/;"	f
md_print_cregs	machine.c	/^md_print_cregs(md_ctrl_t regs, FILE *stream)$/;"	f
md_print_fpreg	machine.c	/^md_print_fpreg(md_fpr_t regs, int reg, FILE *stream)$/;"	f
md_print_fpregs	machine.c	/^md_print_fpregs(md_fpr_t regs, FILE *stream)$/;"	f
md_print_insn	machine.c	/^md_print_insn(md_inst_t inst,		\/* instruction to disassemble *\/$/;"	f
md_print_ireg	machine.c	/^md_print_ireg(md_gpr_t regs, int reg, FILE *stream)$/;"	f
md_print_iregs	machine.c	/^md_print_iregs(md_gpr_t regs, FILE *stream)$/;"	f
md_reg_name	machine.c	/^md_reg_name(enum md_reg_type rt, int reg)$/;"	f
md_reg_names	machine.c	/^struct md_reg_names_t md_reg_names[] =$/;"	v
md_reg_names	machine.h	/^enum md_reg_names {$/;"	g
md_reg_names_t	machine.h	/^struct md_reg_names_t {$/;"	s
md_reg_obj	machine.c	/^md_reg_obj(struct regs_t *regs,			\/* registers to access *\/$/;"	f
md_reg_type	machine.h	/^enum md_reg_type {$/;"	g
md_xor_regs	machine.c	/^md_xor_regs(struct regs_t *regs)$/;"	f
mem	sim-scalar-cpen411.c	/^static struct mem_t *mem = NULL;$/;"	v	file:
mem_access	memory.c	/^mem_access(struct mem_t *mem,		\/* memory space to access *\/$/;"	f
mem_access_fn	memory.h	/^(*mem_access_fn)(struct mem_t *mem,	\/* memory space to access *\/$/;"	t
mem_bcopy	memory.c	/^mem_bcopy(mem_access_fn mem_fn,		\/* user-specified memory accessor *\/$/;"	f
mem_bcopy4	memory.c	/^mem_bcopy4(mem_access_fn mem_fn,	\/* user-specified memory accessor *\/$/;"	f
mem_bzero	memory.c	/^mem_bzero(mem_access_fn mem_fn,		\/* user-specified memory accessor *\/$/;"	f
mem_cmd	memory.h	/^enum mem_cmd {$/;"	g
mem_create	memory.c	/^mem_create(char *name)			\/* name of the memory space *\/$/;"	f
mem_dump	memory.c	/^mem_dump(struct mem_t *mem,		\/* memory space to display *\/$/;"	f
mem_init	memory.c	/^mem_init(struct mem_t *mem)	\/* memory space to initialize *\/$/;"	f
mem_newpage	memory.c	/^mem_newpage(struct mem_t *mem,		\/* memory space to allocate in *\/$/;"	f
mem_pte_t	memory.h	/^struct mem_pte_t {$/;"	s
mem_rec_t	eio.c	/^struct mem_rec_t {$/;"	s	file:
mem_reg_stats	memory.c	/^mem_reg_stats(struct mem_t *mem,	\/* memory space to declare *\/$/;"	f
mem_strcpy	memory.c	/^mem_strcpy(mem_access_fn mem_fn,	\/* user-specified memory accessor *\/$/;"	f
mem_t	memory.h	/^struct mem_t {$/;"	s
mem_translate	memory.c	/^mem_translate(struct mem_t *mem,	\/* memory space to access *\/$/;"	f
memory	sim-scalar-cpen411.c	/^void memory()$/;"	f
my_eval_ident	eval.c	/^my_eval_ident(struct eval_state_t *es)$/;"	f
my_mem_fn	eio.c	/^my_mem_fn(struct mem_t *mem,		\/* memory space to access *\/$/;"	f	file:
myatoq	misc.c	/^myatoq(char *nptr, char **endp, int base)$/;"	f
myatosq	misc.c	/^myatosq(char *nptr, char **endp, int base)$/;"	f
myfprintf	misc.c	/^myfprintf(FILE *stream, char *format, ...)$/;"	f
myrand	misc.c	/^myrand(void)			\/* returns random number *\/$/;"	f
mysprintf	misc.c	/^mysprintf(char *obuf, char *format, ...)$/;"	f
mysrand	misc.c	/^mysrand(unsigned int seed)	\/* random number generator seed *\/$/;"	f
mystrdup	misc.c	/^mystrdup(char *s)		\/* string to duplicate to heap storage *\/$/;"	f
mystricmp	misc.c	/^mystricmp(char *s1, char *s2)	\/* strings to compare, case insensitive *\/$/;"	f
mystrrchr	misc.c	/^mystrrchr(char *s, char c)$/;"	f
myvfprintf	misc.c	/^myvfprintf(FILE *stream, char *format, va_list v)$/;"	f
myvsprintf	misc.c	/^myvsprintf(char *obuf, char *format, va_list v)$/;"	f
name	memory.h	/^  char *name;				\/* name of this memory space *\/$/;"	m	struct:mem_t
name	options.h	/^  char *name;			\/* option name, e.g., "-foo:bar" *\/$/;"	m	struct:opt_opt_t
name	resource.h	/^  char *name;				\/* name of functional unit *\/$/;"	m	struct:res_desc
name	resource.h	/^  char *name;				\/* pool name *\/$/;"	m	struct:res_pool
name	stats.h	/^  char *name;			\/* stat name *\/$/;"	m	struct:stat_stat_t
name	symbol.h	/^  char *name;			\/* symbol name *\/$/;"	m	struct:sym_sym_t
ncmp	symbol.c	/^ncmp(struct sym_sym_t **sym1, struct sym_sym_t **sym2)$/;"	f	file:
nelt	options.h	/^  int *nelt;			\/* number of elements parsed *\/$/;"	m	struct:opt_opt_t
nents	resource.h	/^  int nents[MAX_RES_CLASSES];$/;"	m	struct:res_pool
next	memory.h	/^  struct mem_pte_t *next;	\/* next translation in this bucket *\/$/;"	m	struct:mem_pte_t
next	options.h	/^  struct opt_note_t *next;	\/* next option note *\/$/;"	m	struct:opt_note_t
next	options.h	/^  struct opt_opt_t *next;	\/* next option *\/$/;"	m	struct:opt_opt_t
next	sim-scalar-cpen411.c	/^    struct Inst *next;$/;"	m	struct:Inst	file:
next	stats.h	/^  struct bucket_t *next;	\/* pointer to the next bucket *\/$/;"	m	struct:bucket_t
next	stats.h	/^  struct stat_stat_t *next;	\/* pointer to next stat in database list *\/$/;"	m	struct:stat_stat_t
nice_priority	main.c	/^static int nice_priority;$/;"	v	file:
note	options.h	/^  char *note;			\/* option note *\/$/;"	m	struct:opt_note_t
notes	options.h	/^  struct opt_note_t *notes;	\/* option notes *\/$/;"	m	struct:opt_odb_t
num_resources	resource.h	/^  int num_resources;			\/* total number of res instances *\/$/;"	m	struct:res_pool
nvars	options.h	/^  int nvars;			\/* > 1 if var for list options *\/$/;"	m	struct:opt_opt_t
oc	options.h	/^  enum opt_class_t oc;		\/* class of this option *\/$/;"	m	struct:opt_opt_t
oc_NUM	options.h	/^  oc_NUM$/;"	e	enum:opt_class_t
oc_double	options.h	/^  oc_double,		\/* double option *\/$/;"	e	enum:opt_class_t
oc_enum	options.h	/^  oc_enum,		\/* enumeration option *\/$/;"	e	enum:opt_class_t
oc_flag	options.h	/^  oc_flag,		\/* boolean option *\/$/;"	e	enum:opt_class_t
oc_float	options.h	/^  oc_float,		\/* float option *\/$/;"	e	enum:opt_class_t
oc_int	options.h	/^  oc_int = 0,		\/* integer option *\/$/;"	e	enum:opt_class_t
oc_string	options.h	/^  oc_string,		\/* string option *\/$/;"	e	enum:opt_class_t
oc_uint	options.h	/^  oc_uint,		\/* unsigned integer option *\/$/;"	e	enum:opt_class_t
open	syscall.c	207;"	d	file:
oplat	resource.h	/^    int oplat;				\/* operation latency: cycles until$/;"	m	struct:res_desc::res_template
opt_class_t	options.h	/^enum opt_class_t {$/;"	g
opt_delete	options.c	/^opt_delete(struct opt_odb_t *odb)	\/* option database *\/$/;"	f
opt_find_option	options.c	/^opt_find_option(struct opt_odb_t *odb,	\/* option database *\/$/;"	f
opt_for_double_t	options.h	/^    struct opt_for_double_t {$/;"	s	union:opt_opt_t::opt_variant_t
opt_for_enum_t	options.h	/^    struct opt_for_enum_t {$/;"	s	union:opt_opt_t::opt_variant_t
opt_for_float_t	options.h	/^    struct opt_for_float_t {$/;"	s	union:opt_opt_t::opt_variant_t
opt_for_int_t	options.h	/^    struct opt_for_int_t {$/;"	s	union:opt_opt_t::opt_variant_t
opt_for_string_t	options.h	/^    struct opt_for_string_t {$/;"	s	union:opt_opt_t::opt_variant_t
opt_for_uint_t	options.h	/^    struct opt_for_uint_t {$/;"	s	union:opt_opt_t::opt_variant_t
opt_new	options.c	/^opt_new(orphan_fn_t orphan_fn)	\/* user-specified orphan parser *\/$/;"	f
opt_note_t	options.h	/^struct opt_note_t {$/;"	s
opt_null_string	options.c	/^opt_null_string(struct opt_opt_t *opt)$/;"	f
opt_odb_t	options.h	/^struct opt_odb_t {$/;"	s
opt_opt_t	options.h	/^struct opt_opt_t {$/;"	s
opt_print_help	options.c	/^opt_print_help(struct opt_odb_t *odb,	\/* option data base *\/$/;"	f
opt_print_option	options.c	/^opt_print_option(struct opt_opt_t *opt,\/* option variable *\/$/;"	f
opt_print_options	options.c	/^opt_print_options(struct opt_odb_t *odb,\/* option data base *\/$/;"	f
opt_process_options	options.c	/^opt_process_options(struct opt_odb_t *odb,	\/* option data base *\/$/;"	f
opt_reg_double	options.c	/^opt_reg_double(struct opt_odb_t *odb,	\/* option data base *\/$/;"	f
opt_reg_double_list	options.c	/^opt_reg_double_list(struct opt_odb_t *odb, \/* option data base *\/$/;"	f
opt_reg_enum	options.c	/^opt_reg_enum(struct opt_odb_t *odb,	\/* option data base *\/$/;"	f
opt_reg_enum_list	options.c	/^opt_reg_enum_list(struct opt_odb_t *odb,\/* option data base *\/$/;"	f
opt_reg_flag	options.c	/^opt_reg_flag(struct opt_odb_t *odb,	\/* option data base *\/$/;"	f
opt_reg_flag_list	options.c	/^opt_reg_flag_list(struct opt_odb_t *odb,\/* option database *\/$/;"	f
opt_reg_float	options.c	/^opt_reg_float(struct opt_odb_t *odb,	\/* option data base *\/$/;"	f
opt_reg_float_list	options.c	/^opt_reg_float_list(struct opt_odb_t *odb,\/* option data base *\/$/;"	f
opt_reg_header	options.c	/^opt_reg_header(struct opt_odb_t *odb,	\/* option database *\/$/;"	f
opt_reg_int	options.c	/^opt_reg_int(struct opt_odb_t *odb,	\/* option data base *\/$/;"	f
opt_reg_int_list	options.c	/^opt_reg_int_list(struct opt_odb_t *odb,\/* option database *\/$/;"	f
opt_reg_note	options.c	/^opt_reg_note(struct opt_odb_t *odb,	\/* option database *\/$/;"	f
opt_reg_string	options.c	/^opt_reg_string(struct opt_odb_t *odb,	\/* option data base *\/$/;"	f
opt_reg_string_list	options.c	/^opt_reg_string_list(struct opt_odb_t *odb,\/* option data base *\/$/;"	f
opt_reg_uint	options.c	/^opt_reg_uint(struct opt_odb_t *odb,	\/* option database *\/$/;"	f
opt_reg_uint_list	options.c	/^opt_reg_uint_list(struct opt_odb_t *odb,\/* option database *\/$/;"	f
opt_variant_t	options.h	/^  union opt_variant_t {$/;"	u	struct:opt_opt_t
options	options.h	/^  struct opt_opt_t *options;	\/* user-installed options in option database *\/$/;"	m	struct:opt_odb_t
orphan_fn	main.c	/^orphan_fn(int i, int argc, char **argv)$/;"	f	file:
orphan_fn	options.h	/^  orphan_fn_t orphan_fn;	\/* user-specified orphan parser *\/$/;"	m	struct:opt_odb_t
orphan_fn_t	options.h	/^(*orphan_fn_t)(int i,		\/* index of the orphan'ed argument *\/$/;"	t
output_mem	eio.c	/^static struct exo_term_t *output_mem;$/;"	v	file:
output_mem_rec	eio.c	/^static struct mem_rec_t output_mem_rec;$/;"	v	file:
output_regs	eio.c	/^static struct exo_term_t *output_regs;$/;"	v	file:
overflows	stats.h	/^      unsigned int overflows;	\/* total overflows in stat_add_samples() *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_dist_t
p	eval.h	/^  char *p;			\/* ptr to next char to consume from expr *\/$/;"	m	struct:eval_state_t
page	memory.h	/^  byte_t *page;			\/* page pointer *\/$/;"	m	struct:mem_pte_t
page_count	memory.h	/^  counter_t page_count;			\/* total number of pages allocated *\/$/;"	m	struct:mem_t
panic	misc.h	115;"	d
pc	sim-scalar-cpen411.c	/^    unsigned     pc;$/;"	m	struct:Inst	file:
peek_next_token	eval.c	/^peek_next_token(struct eval_state_t *es) \/* expression evalutor *\/$/;"	f	file:
peek_tok	eval.h	/^  enum eval_token_t peek_tok;	\/* peek buffer, for one token look-ahead *\/$/;"	m	struct:eval_state_t
pf	stats.h	/^      int pf;			\/* printables *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_dist_t
pf	stats.h	/^      int pf;			\/* printables *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_sdist_t
pipe	syscall.c	209;"	d	file:
pipeline_latch	sim-scalar-cpen411.c	/^enum pipeline_latch {$/;"	g	file:
pos	range.h	/^  counter_t pos;		\/* position *\/$/;"	m	struct:range_pos_t
print	options.h	/^  int print;			\/* print option during `-dumpconfig'? *\/$/;"	m	struct:opt_opt_t
print_dist	stats.c	/^print_dist(struct stat_stat_t *stat,	\/* stat variable *\/$/;"	f	file:
print_fn	stats.h	/^      print_fn_t print_fn;	\/* optional user-specified print fn *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_dist_t
print_fn	stats.h	/^      print_fn_t print_fn;	\/* optional user-specified print fn *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_sdist_t
print_fn_t	stats.h	/^(*print_fn_t)(struct stat_stat_t *stat,	\/* the stat variable being printed *\/$/;"	t
print_help	options.c	/^print_help(struct opt_opt_t *opt,	\/* option variable *\/$/;"	f	file:
print_instruction	sim-scalar-cpen411.c	/^void print_instruction( inst_t *x )$/;"	f
print_option_header	options.c	/^print_option_header(struct opt_odb_t *odb,\/* options database *\/$/;"	f	file:
print_option_notes	options.c	/^print_option_notes(struct opt_odb_t *odb,\/* options database *\/$/;"	f	file:
print_sdist	stats.c	/^print_sdist(struct stat_stat_t *stat,	\/* stat variable *\/$/;"	f	file:
process_file	options.c	/^process_file(struct opt_odb_t *odb, char *fname, int depth)$/;"	f	file:
process_option	options.c	/^process_option(struct opt_odb_t *odb,	\/* option database *\/$/;"	f
pt_NUM	range.h	/^  pt_NUM$/;"	e	enum:range_ptype_t
pt_addr	range.h	/^  pt_addr = 0,			\/* address position *\/$/;"	e	enum:range_ptype_t
pt_cycle	range.h	/^  pt_cycle,			\/* cycle count position *\/$/;"	e	enum:range_ptype_t
pt_inst	range.h	/^  pt_inst,			\/* instruction count position *\/$/;"	e	enum:range_ptype_t
ptab	memory.h	/^  struct mem_pte_t *ptab[MEM_PTAB_SIZE];\/* inverted page table *\/$/;"	m	struct:mem_t
ptab_accesses	memory.h	/^  counter_t ptab_accesses;		\/* total page table accesses *\/$/;"	m	struct:mem_t
ptab_misses	memory.h	/^  counter_t ptab_misses;		\/* total first level page tbl misses *\/$/;"	m	struct:mem_t
ptype	range.h	/^  enum range_ptype_t ptype;	\/* type of position *\/$/;"	m	struct:range_pos_t
pub	symbol.h	/^  int pub;			\/* externally visible? *\/$/;"	m	struct:sym_sym_t
quantity	resource.h	/^  int quantity;				\/* total instances of this unit *\/$/;"	m	struct:res_desc
qword_t	host.h	/^typedef unsigned __int64 qword_t;	\/* qword - 64 bits *\/$/;"	t
qword_t	host.h	/^typedef unsigned long long qword_t;	\/* qword - 64 bits *\/$/;"	t
qword_t	host.h	/^typedef unsigned long qword_t;		\/* qword - 64 bits *\/$/;"	t
rand_seed	main.c	/^static int rand_seed;$/;"	v	file:
range_cmp_pos	range.c	/^range_cmp_pos(struct range_pos_t *pos,		\/* execution position *\/$/;"	f
range_cmp_range	range.c	/^range_cmp_range(struct range_range_t *range,	\/* execution range *\/$/;"	f
range_cmp_range1	range.c	/^range_cmp_range1(struct range_range_t *range,	\/* execution range *\/$/;"	f
range_parse_pos	range.c	/^range_parse_pos(char *pstr,			\/* execution position string *\/$/;"	f
range_parse_range	range.c	/^range_parse_range(char *rstr,			\/* execution range string *\/$/;"	f
range_pos_t	range.h	/^struct range_pos_t {$/;"	s
range_print_pos	range.c	/^range_print_pos(struct range_pos_t *pos,	\/* execution position *\/$/;"	f
range_print_range	range.c	/^range_print_range(struct range_range_t *range,	\/* execution range *\/$/;"	f
range_ptype_t	range.h	/^enum range_ptype_t {$/;"	g
range_range_t	range.h	/^struct range_range_t {$/;"	s
read	syscall.c	215;"	d	file:
reg	machine.h	/^  int reg;			\/* register index *\/$/;"	m	struct:md_reg_names_t
regs	sim-scalar-cpen411.c	/^static struct regs_t regs;$/;"	v	file:
regs_C	regs.h	/^  md_ctrl_t regs_C;		\/* control register file *\/$/;"	m	struct:regs_t
regs_F	regs.h	/^  md_fpr_t regs_F;		\/* floating point register file *\/$/;"	m	struct:regs_t
regs_NPC	regs.h	/^  md_addr_t regs_NPC;		\/* next-cycle program counter *\/$/;"	m	struct:regs_t
regs_PC	regs.h	/^  md_addr_t regs_PC;		\/* program counter *\/$/;"	m	struct:regs_t
regs_R	regs.h	/^  md_gpr_t regs_R;		\/* (signed) integer register file *\/$/;"	m	struct:regs_t
regs_create	regs.c	/^regs_create(void)$/;"	f
regs_init	regs.c	/^regs_init(struct regs_t *regs)		\/* register file to initialize *\/$/;"	f
regs_t	regs.h	/^struct regs_t {$/;"	s
res_create_pool	resource.c	/^res_create_pool(char *name, struct res_desc *pool, int ndesc)$/;"	f
res_desc	resource.h	/^struct res_desc {$/;"	s
res_dump	resource.c	/^res_dump(struct res_pool *pool, FILE *stream)$/;"	f
res_get	resource.c	/^res_get(struct res_pool *pool, int class)$/;"	f
res_pool	resource.h	/^struct res_pool {$/;"	s
res_template	resource.h	/^  struct res_template {$/;"	s	struct:res_desc
resources	resource.h	/^  struct res_desc *resources;		\/* resource instances *\/$/;"	m	struct:res_pool
result_type	eval.c	/^result_type(enum eval_type_t t1,	\/* left operand type *\/$/;"	f	file:
rt_NPC	machine.h	/^  rt_NPC,		\/* next program counter *\/$/;"	e	enum:md_reg_type
rt_NUM	machine.h	/^  rt_NUM$/;"	e	enum:md_reg_type
rt_PC	machine.h	/^  rt_PC,		\/* program counter *\/$/;"	e	enum:md_reg_type
rt_ctrl	machine.h	/^  rt_ctrl,		\/* control register *\/$/;"	e	enum:md_reg_type
rt_dpr	machine.h	/^  rt_dpr,		\/* double-precision floating pointer register *\/$/;"	e	enum:md_reg_type
rt_fpr	machine.h	/^  rt_fpr,		\/* single-precision floating pointer register *\/$/;"	e	enum:md_reg_type
rt_gpr	machine.h	/^  rt_gpr,		\/* general purpose register *\/$/;"	e	enum:md_reg_type
rt_lpr	machine.h	/^  rt_lpr,		\/* integer-precision floating pointer register *\/$/;"	e	enum:md_reg_type
running	main.c	/^static int running = FALSE;$/;"	v	file:
sarr	stats.h	/^      struct bucket_t **sarr;	\/* sparse array pointer *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_sdist_t
sbyte_t	host.h	/^typedef signed char sbyte_t;$/;"	t
sc	stats.h	/^  enum stat_class_t sc;		\/* stat class *\/$/;"	m	struct:stat_stat_t
sc_NUM	stats.h	/^  sc_NUM$/;"	e	enum:stat_class_t
sc_counter	machine.h	571;"	d
sc_counter	machine.h	575;"	d
sc_dist	stats.h	/^  sc_dist,			\/* array distribution stat *\/$/;"	e	enum:stat_class_t
sc_double	stats.h	/^  sc_double,			\/* double-precision FP stat *\/$/;"	e	enum:stat_class_t
sc_float	stats.h	/^  sc_float,			\/* single-precision FP stat *\/$/;"	e	enum:stat_class_t
sc_formula	stats.h	/^  sc_formula,			\/* stat expression formula *\/$/;"	e	enum:stat_class_t
sc_int	stats.h	/^  sc_int = 0,			\/* integer stat *\/$/;"	e	enum:stat_class_t
sc_qword	stats.h	/^  sc_qword,			\/* qword integer stat *\/$/;"	e	enum:stat_class_t
sc_sdist	stats.h	/^  sc_sdist,			\/* sparse array distribution stat *\/$/;"	e	enum:stat_class_t
sc_sqword	stats.h	/^  sc_sqword,			\/* signed qword integer stat *\/$/;"	e	enum:stat_class_t
sc_uint	stats.h	/^  sc_uint,			\/* unsigned integer stat *\/$/;"	e	enum:stat_class_t
sdb_NUM	symbol.h	/^  sdb_NUM$/;"	e	enum:sym_db_t
sdb_any	symbol.h	/^  sdb_any,			\/* search all symbols *\/$/;"	e	enum:sym_db_t
sdb_data	symbol.h	/^  sdb_data,			\/* search data symbols *\/$/;"	e	enum:sym_db_t
sdb_text	symbol.h	/^  sdb_text,			\/* search text symbols *\/$/;"	e	enum:sym_db_t
seen_write	eio.c	/^static int seen_write;$/;"	v	file:
seg	symbol.h	/^  enum sym_seg_t seg;		\/* symbol segment *\/$/;"	m	struct:sym_sym_t
setjmp	host.h	136;"	d
sfloat_t	host.h	/^typedef float sfloat_t;			\/* single-precision float - 32 bits *\/$/;"	t
sg_erase	syscall.c	/^  byte_t sg_erase;      \/* erase character *\/$/;"	m	struct:ss_sgttyb	file:
sg_flags	syscall.c	/^  shalf_t sg_flags;     \/* mode flags *\/$/;"	m	struct:ss_sgttyb	file:
sg_ispeed	syscall.c	/^  byte_t sg_ispeed;     \/* input speed *\/$/;"	m	struct:ss_sgttyb	file:
sg_kill	syscall.c	/^  byte_t sg_kill;       \/* kill character *\/$/;"	m	struct:ss_sgttyb	file:
sg_ospeed	syscall.c	/^  byte_t sg_ospeed;     \/* output speed *\/$/;"	m	struct:ss_sgttyb	file:
shalf_t	host.h	/^typedef signed short shalf_t;$/;"	t
signal_exit_now	main.c	/^signal_exit_now(int sigtype)$/;"	f	file:
signal_sim_stats	main.c	/^signal_sim_stats(int sigtype)$/;"	f	file:
sim_aux_config	sim-scalar-cpen411.c	/^sim_aux_config(FILE *stream)        \/* output stream *\/$/;"	f
sim_aux_stats	sim-scalar-cpen411.c	/^sim_aux_stats(FILE *stream)     \/* output stream *\/$/;"	f
sim_check_options	sim-scalar-cpen411.c	/^sim_check_options(struct opt_odb_t *odb, int argc, char **argv)$/;"	f
sim_chkpt_fname	main.c	/^char *sim_chkpt_fname = NULL;$/;"	v
sim_cycle	sim-scalar-cpen411.c	/^unsigned sim_cycle;$/;"	v
sim_dump_stats	main.c	/^int sim_dump_stats = FALSE;$/;"	v
sim_eio_fd	main.c	/^FILE *sim_eio_fd = NULL;$/;"	v
sim_eio_fname	main.c	/^char *sim_eio_fname = NULL;$/;"	v
sim_elapsed_time	main.c	/^int sim_elapsed_time;$/;"	v
sim_end_time	main.c	/^time_t sim_end_time;$/;"	v
sim_exit_buf	main.c	/^jmp_buf sim_exit_buf;$/;"	v
sim_exit_now	main.c	/^int sim_exit_now = FALSE;$/;"	v
sim_init	sim-scalar-cpen411.c	/^sim_init(void)$/;"	f
sim_load_prog	sim-scalar-cpen411.c	/^sim_load_prog(char *fname,      \/* program to load *\/$/;"	f
sim_main	sim-scalar-cpen411.c	/^void sim_main(void)$/;"	f
sim_num_insn	main.c	/^counter_t sim_num_insn = 0;$/;"	v
sim_num_refs	sim-scalar-cpen411.c	/^static counter_t sim_num_refs = 0;$/;"	v	file:
sim_odb	main.c	/^struct opt_odb_t *sim_odb;$/;"	v
sim_print_stats	main.c	/^sim_print_stats(FILE *fd)		\/* output stream *\/$/;"	f
sim_progfd	main.c	/^FILE *sim_progfd = NULL;$/;"	v
sim_progout	main.c	/^static char *sim_progout = NULL;$/;"	v	file:
sim_reg_options	sim-scalar-cpen411.c	/^sim_reg_options(struct opt_odb_t *odb)$/;"	f
sim_reg_stats	sim-scalar-cpen411.c	/^sim_reg_stats(struct stat_sdb_t *sdb)$/;"	f
sim_sdb	main.c	/^struct stat_sdb_t *sim_sdb;$/;"	v
sim_simout	main.c	/^static char *sim_simout = NULL;$/;"	v	file:
sim_start_time	main.c	/^time_t sim_start_time;$/;"	v
sim_swap_bytes	main.c	/^int sim_swap_bytes;$/;"	v
sim_swap_words	main.c	/^int sim_swap_words;$/;"	v
sim_uninit	sim-scalar-cpen411.c	/^sim_uninit(void)$/;"	f
size	eio.c	/^  unsigned size, maxsize;$/;"	m	struct:mem_rec_t	file:
size	symbol.h	/^  int size;			\/* bytes to next symbol *\/$/;"	m	struct:sym_sym_t
slargeint_t	misc.c	/^typedef sqword_t slargeint_t;$/;"	t	file:
slargeint_t	misc.c	/^typedef sword_t slargeint_t;$/;"	t	file:
sqword_t	host.h	/^typedef signed __int64 sqword_t;$/;"	t
sqword_t	host.h	/^typedef signed long long sqword_t;$/;"	t
sqword_t	host.h	/^typedef signed long sqword_t;$/;"	t
src	sim-scalar-cpen411.c	/^    struct Inst *src[3];    \/\/ src operand instructions$/;"	m	struct:Inst	file:
ss_NUM	symbol.h	/^  ss_NUM$/;"	e	enum:sym_seg_t
ss_data	symbol.h	/^  ss_data,			\/* data segment symbol *\/$/;"	e	enum:sym_seg_t
ss_flag	syscall.c	/^  int ss_flag;$/;"	m	struct:	file:
ss_flag_table	syscall.c	/^} ss_flag_table[] = {$/;"	v
ss_pad	syscall.c	/^  shalf_t ss_pad;$/;"	m	struct:ss_statbuf	file:
ss_pad1	syscall.c	/^  shalf_t ss_pad1;$/;"	m	struct:ss_statbuf	file:
ss_rlim_cur	syscall.c	/^  int ss_rlim_cur;		\/* current (soft) limit *\/$/;"	m	struct:ss_rlimit	file:
ss_rlim_max	syscall.c	/^  int ss_rlim_max;		\/* maximum value for rlim_cur *\/$/;"	m	struct:ss_rlimit	file:
ss_rlimit	syscall.c	/^struct ss_rlimit$/;"	s	file:
ss_ru_idrss	syscall.c	/^  sword_t ss_ru_idrss;$/;"	m	struct:ss_rusage	file:
ss_ru_inblock	syscall.c	/^  sword_t ss_ru_inblock;$/;"	m	struct:ss_rusage	file:
ss_ru_isrss	syscall.c	/^  sword_t ss_ru_isrss;$/;"	m	struct:ss_rusage	file:
ss_ru_ixrss	syscall.c	/^  sword_t ss_ru_ixrss;$/;"	m	struct:ss_rusage	file:
ss_ru_majflt	syscall.c	/^  sword_t ss_ru_majflt;$/;"	m	struct:ss_rusage	file:
ss_ru_maxrss	syscall.c	/^  sword_t ss_ru_maxrss;$/;"	m	struct:ss_rusage	file:
ss_ru_minflt	syscall.c	/^  sword_t ss_ru_minflt;$/;"	m	struct:ss_rusage	file:
ss_ru_msgrcv	syscall.c	/^  sword_t ss_ru_msgrcv;$/;"	m	struct:ss_rusage	file:
ss_ru_msgsnd	syscall.c	/^  sword_t ss_ru_msgsnd;$/;"	m	struct:ss_rusage	file:
ss_ru_nivcsw	syscall.c	/^  sword_t ss_ru_nivcsw;$/;"	m	struct:ss_rusage	file:
ss_ru_nsignals	syscall.c	/^  sword_t ss_ru_nsignals;$/;"	m	struct:ss_rusage	file:
ss_ru_nswap	syscall.c	/^  sword_t ss_ru_nswap;$/;"	m	struct:ss_rusage	file:
ss_ru_nvcsw	syscall.c	/^  sword_t ss_ru_nvcsw;$/;"	m	struct:ss_rusage	file:
ss_ru_oublock	syscall.c	/^  sword_t ss_ru_oublock;$/;"	m	struct:ss_rusage	file:
ss_ru_stime	syscall.c	/^  struct ss_timeval ss_ru_stime;$/;"	m	struct:ss_rusage	file:
ss_ru_utime	syscall.c	/^  struct ss_timeval ss_ru_utime;$/;"	m	struct:ss_rusage	file:
ss_rusage	syscall.c	/^struct ss_rusage$/;"	s	file:
ss_sgttyb	syscall.c	/^struct ss_sgttyb {$/;"	s	file:
ss_st_atime	syscall.c	/^  sword_t ss_st_atime;$/;"	m	struct:ss_statbuf	file:
ss_st_blksize	syscall.c	/^  sword_t ss_st_blksize;$/;"	m	struct:ss_statbuf	file:
ss_st_blocks	syscall.c	/^  sword_t ss_st_blocks;$/;"	m	struct:ss_statbuf	file:
ss_st_ctime	syscall.c	/^  sword_t ss_st_ctime;$/;"	m	struct:ss_statbuf	file:
ss_st_dev	syscall.c	/^  shalf_t ss_st_dev;$/;"	m	struct:ss_statbuf	file:
ss_st_gennum	syscall.c	/^  word_t ss_st_gennum;$/;"	m	struct:ss_statbuf	file:
ss_st_gid	syscall.c	/^  shalf_t ss_st_gid;$/;"	m	struct:ss_statbuf	file:
ss_st_ino	syscall.c	/^  word_t ss_st_ino;$/;"	m	struct:ss_statbuf	file:
ss_st_mode	syscall.c	/^  half_t ss_st_mode;$/;"	m	struct:ss_statbuf	file:
ss_st_mtime	syscall.c	/^  sword_t ss_st_mtime;$/;"	m	struct:ss_statbuf	file:
ss_st_nlink	syscall.c	/^  shalf_t ss_st_nlink;$/;"	m	struct:ss_statbuf	file:
ss_st_rdev	syscall.c	/^  shalf_t ss_st_rdev;$/;"	m	struct:ss_statbuf	file:
ss_st_size	syscall.c	/^  sword_t ss_st_size;$/;"	m	struct:ss_statbuf	file:
ss_st_spare1	syscall.c	/^  sword_t ss_st_spare1;$/;"	m	struct:ss_statbuf	file:
ss_st_spare2	syscall.c	/^  sword_t ss_st_spare2;$/;"	m	struct:ss_statbuf	file:
ss_st_spare3	syscall.c	/^  sword_t ss_st_spare3;$/;"	m	struct:ss_statbuf	file:
ss_st_spare4	syscall.c	/^  sword_t ss_st_spare4;$/;"	m	struct:ss_statbuf	file:
ss_st_uid	syscall.c	/^  shalf_t ss_st_uid;$/;"	m	struct:ss_statbuf	file:
ss_statbuf	syscall.c	/^struct ss_statbuf$/;"	s	file:
ss_text	symbol.h	/^  ss_text,			\/* text segment symbol *\/$/;"	e	enum:sym_seg_t
ss_timeval	syscall.c	/^struct ss_timeval$/;"	s	file:
ss_timezone	syscall.c	/^struct ss_timezone$/;"	s	file:
ss_tv_sec	syscall.c	/^  sword_t ss_tv_sec;		\/* seconds *\/$/;"	m	struct:ss_timeval	file:
ss_tv_usec	syscall.c	/^  sword_t ss_tv_usec;		\/* microseconds *\/$/;"	m	struct:ss_timeval	file:
ss_tz_dsttime	syscall.c	/^  sword_t ss_tz_dsttime;	\/* type of dst correction *\/$/;"	m	struct:ss_timezone	file:
ss_tz_minuteswest	syscall.c	/^  sword_t ss_tz_minuteswest;	\/* minutes west of Greenwich *\/$/;"	m	struct:ss_timezone	file:
start	range.h	/^  struct range_pos_t start;$/;"	m	struct:range_range_t
stat	syscall.c	212;"	d	file:
stat_add_sample	stats.c	/^stat_add_sample(struct stat_stat_t *stat,\/* stat variable *\/$/;"	f
stat_add_samples	stats.c	/^stat_add_samples(struct stat_stat_t *stat,\/* stat database *\/$/;"	f
stat_class_t	stats.h	/^enum stat_class_t {$/;"	g
stat_delete	stats.c	/^stat_delete(struct stat_sdb_t *sdb)	\/* stats database *\/$/;"	f
stat_eval_ident	stats.c	/^stat_eval_ident(struct eval_state_t *es)\/* an expression evaluator *\/$/;"	f
stat_find_stat	stats.c	/^stat_find_stat(struct stat_sdb_t *sdb,	\/* stat database *\/$/;"	f
stat_for_dist_t	stats.h	/^    struct stat_for_dist_t {$/;"	s	union:stat_stat_t::stat_variant_t
stat_for_double_t	stats.h	/^    struct stat_for_double_t {$/;"	s	union:stat_stat_t::stat_variant_t
stat_for_float_t	stats.h	/^    struct stat_for_float_t {$/;"	s	union:stat_stat_t::stat_variant_t
stat_for_formula_t	stats.h	/^    struct stat_for_formula_t {$/;"	s	union:stat_stat_t::stat_variant_t
stat_for_int_t	stats.h	/^    struct stat_for_int_t {$/;"	s	union:stat_stat_t::stat_variant_t
stat_for_qword_t	stats.h	/^    struct stat_for_qword_t {$/;"	s	union:stat_stat_t::stat_variant_t
stat_for_sdist_t	stats.h	/^    struct stat_for_sdist_t {$/;"	s	union:stat_stat_t::stat_variant_t
stat_for_sqword_t	stats.h	/^    struct stat_for_sqword_t {$/;"	s	union:stat_stat_t::stat_variant_t
stat_for_uint_t	stats.h	/^    struct stat_for_uint_t {$/;"	s	union:stat_stat_t::stat_variant_t
stat_new	stats.c	/^stat_new(void)$/;"	f
stat_print_stat	stats.c	/^stat_print_stat(struct stat_sdb_t *sdb,	\/* stat database *\/$/;"	f
stat_print_stats	stats.c	/^stat_print_stats(struct stat_sdb_t *sdb,\/* stat database *\/$/;"	f
stat_reg_addr	machine.h	580;"	d
stat_reg_counter	machine.h	570;"	d
stat_reg_counter	machine.h	574;"	d
stat_reg_dist	stats.c	/^stat_reg_dist(struct stat_sdb_t *sdb,	\/* stat database *\/$/;"	f
stat_reg_double	stats.c	/^stat_reg_double(struct stat_sdb_t *sdb,	\/* stat database *\/$/;"	f
stat_reg_float	stats.c	/^stat_reg_float(struct stat_sdb_t *sdb,	\/* stat database *\/$/;"	f
stat_reg_formula	stats.c	/^stat_reg_formula(struct stat_sdb_t *sdb,\/* stat database *\/$/;"	f
stat_reg_int	stats.c	/^stat_reg_int(struct stat_sdb_t *sdb,	\/* stat database *\/$/;"	f
stat_reg_qword	stats.c	/^stat_reg_qword(struct stat_sdb_t *sdb,	\/* stat database *\/$/;"	f
stat_reg_sdist	stats.c	/^stat_reg_sdist(struct stat_sdb_t *sdb,	\/* stat database *\/$/;"	f
stat_reg_sqword	stats.c	/^stat_reg_sqword(struct stat_sdb_t *sdb,	\/* stat database *\/$/;"	f
stat_reg_uint	stats.c	/^stat_reg_uint(struct stat_sdb_t *sdb,	\/* stat database *\/$/;"	f
stat_sdb_t	stats.h	/^struct stat_sdb_t {$/;"	s
stat_stat_t	stats.h	/^struct stat_stat_t {$/;"	s
stat_variant_t	stats.h	/^  union stat_variant_t {$/;"	u	struct:stat_stat_t
stats	stats.h	/^  struct stat_stat_t *stats;		\/* list of stats in database *\/$/;"	m	struct:stat_sdb_t
status	sim-scalar-cpen411.c	/^    int          status;    \/\/ where is the instruction in the pipeline?$/;"	m	struct:Inst	file:
stestit	misc.c	/^stestit(char *s)$/;"	f
str	machine.h	/^  char *str;			\/* register name *\/$/;"	m	struct:md_reg_names_t
strtoul	eval.c	62;"	d	file:
strtoul	misc.h	220;"	d
sword_t	host.h	/^typedef signed int sword_t;$/;"	t
sym_bind_addr	symbol.c	/^sym_bind_addr(md_addr_t addr,		\/* address of symbol to locate *\/$/;"	f
sym_bind_name	symbol.c	/^sym_bind_name(char *name,			\/* symbol name to locate *\/$/;"	f
sym_datasyms	symbol.c	/^struct sym_sym_t **sym_datasyms = NULL;$/;"	v
sym_datasyms_by_name	symbol.c	/^struct sym_sym_t **sym_datasyms_by_name = NULL;$/;"	v
sym_db	symbol.c	/^struct sym_sym_t *sym_db = NULL;$/;"	v
sym_db_t	symbol.h	/^enum sym_db_t {$/;"	g
sym_dumpstate	symbol.c	/^sym_dumpstate(FILE *fd)			\/* output stream *\/$/;"	f
sym_dumpsym	symbol.c	/^sym_dumpsym(struct sym_sym_t *sym,	\/* symbol to display *\/$/;"	f
sym_dumpsyms	symbol.c	/^sym_dumpsyms(FILE *fd)			\/* output stream *\/$/;"	f
sym_loadsyms	symbol.c	/^sym_loadsyms(char *fname,	\/* file name containing symbols *\/$/;"	f
sym_map	eval.c	/^static struct sym_map_t sym_map[] = {$/;"	v	file:
sym_map_t	eval.c	/^struct sym_map_t {$/;"	s	file:
sym_ndatasyms	symbol.c	/^int sym_ndatasyms = 0;$/;"	v
sym_nsyms	symbol.c	/^int sym_nsyms = 0;$/;"	v
sym_ntextsyms	symbol.c	/^int sym_ntextsyms = 0;$/;"	v
sym_seg_t	symbol.h	/^enum sym_seg_t {$/;"	g
sym_sym_t	symbol.h	/^struct sym_sym_t {$/;"	s
sym_syms	symbol.c	/^struct sym_sym_t **sym_syms = NULL;$/;"	v
sym_syms_by_name	symbol.c	/^struct sym_sym_t **sym_syms_by_name = NULL;$/;"	v
sym_textsyms	symbol.c	/^struct sym_sym_t **sym_textsyms = NULL;$/;"	v
sym_textsyms_by_name	symbol.c	/^struct sym_sym_t **sym_textsyms_by_name = NULL;$/;"	v
symbol	eval.c	/^  char *symbol;$/;"	m	struct:sym_map_t	file:
syms_loaded	symbol.c	/^static int syms_loaded = FALSE;$/;"	v	file:
sys_syscall	syscall.c	/^sys_syscall(struct regs_t *regs,	\/* registers to access *\/$/;"	f
table	resource.h	/^  struct res_template *table[MAX_RES_CLASSES][MAX_INSTS_PER_CLASS];$/;"	m	struct:res_pool
tag	memory.h	/^  md_addr_t tag;		\/* virtual page number tag *\/$/;"	m	struct:mem_pte_t
taken	sim-scalar-cpen411.c	/^    int          taken;     \/\/ if branch, is it taken?$/;"	m	struct:Inst	file:
term	eval.c	/^term(struct eval_state_t *es)		\/* expression evaluator *\/$/;"	f	file:
testit	misc.c	/^testit(char *s)$/;"	f
tick_t	host.h	/^typedef dfloat_t tick_t;$/;"	t
tick_t	host.h	/^typedef sqword_t tick_t;		\/* NOTE: unsigned breaks caches *\/$/;"	t
tok_buf	eval.h	/^  char tok_buf[512];		\/* text of last token returned *\/$/;"	m	struct:eval_state_t
tok_const	eval.h	/^  tok_const,		\/* numeric literals *\/$/;"	e	enum:eval_token_t
tok_cparen	eval.h	/^  tok_cparen,		\/* `)' *\/$/;"	e	enum:eval_token_t
tok_div	eval.h	/^  tok_div,		\/* `\/' *\/$/;"	e	enum:eval_token_t
tok_eof	eval.h	/^  tok_eof,		\/* end of file *\/$/;"	e	enum:eval_token_t
tok_ident	eval.h	/^  tok_ident,		\/* user-valued identifiers *\/$/;"	e	enum:eval_token_t
tok_invalid	eval.h	/^  tok_invalid		\/* unrecognized token *\/$/;"	e	enum:eval_token_t
tok_map	eval.c	/^static enum eval_token_t tok_map[256];$/;"	v	file:
tok_map_initialized	eval.c	/^static int tok_map_initialized = FALSE;$/;"	v	file:
tok_minus	eval.h	/^  tok_minus,		\/* `-' *\/$/;"	e	enum:eval_token_t
tok_mult	eval.h	/^  tok_mult,		\/* `*' *\/$/;"	e	enum:eval_token_t
tok_oparen	eval.h	/^  tok_oparen,		\/* `(' *\/$/;"	e	enum:eval_token_t
tok_plus	eval.h	/^  tok_plus,		\/* `+' *\/$/;"	e	enum:eval_token_t
tok_whitespace	eval.h	/^  tok_whitespace,	\/* ` ', `\\t', `\\n' *\/$/;"	e	enum:eval_token_t
type	eval.h	/^  enum eval_type_t type;		\/* type of expression value *\/$/;"	m	struct:eval_value_t
type	misc.c	/^  char *type;$/;"	m	struct:	file:
type	sim-scalar-cpen411.c	/^    int          type;$/;"	m	struct:Inst	file:
uid	sim-scalar-cpen411.c	/^    unsigned     uid;       \/\/ instruction number$/;"	m	struct:Inst	file:
unlink	syscall.c	206;"	d	file:
usage	main.c	/^usage(FILE *fd, int argc, char **argv)$/;"	f	file:
user_ptr	eval.h	/^  void *user_ptr;		\/* user-supplied argument pointer *\/$/;"	m	struct:eval_state_t
utime	syscall.c	219;"	d	file:
value	eval.c	/^  struct eval_value_t *value;$/;"	m	struct:sym_map_t	file:
value	eval.h	/^  } value;$/;"	m	struct:eval_value_t
var	options.h	/^      char **var;		\/* pointer to string pointer option *\/$/;"	m	struct:opt_opt_t::opt_variant_t::opt_for_string_t
var	options.h	/^      double *var;		\/* pointer to double option *\/$/;"	m	struct:opt_opt_t::opt_variant_t::opt_for_double_t
var	options.h	/^      float *var;		\/* pointer to float option *\/$/;"	m	struct:opt_opt_t::opt_variant_t::opt_for_float_t
var	options.h	/^      int *var;			\/* pointer to integer option *\/$/;"	m	struct:opt_opt_t::opt_variant_t::opt_for_int_t
var	options.h	/^      int *var;			\/* ptr to *int* enum option, NOTE: AN INT *\/$/;"	m	struct:opt_opt_t::opt_variant_t::opt_for_enum_t
var	options.h	/^      unsigned int *var;	\/* pointer to unsigned integer option *\/$/;"	m	struct:opt_opt_t::opt_variant_t::opt_for_uint_t
var	stats.h	/^      double *var;		\/* double stat variable *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_double_t
var	stats.h	/^      float *var;		\/* float stat variable *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_float_t
var	stats.h	/^      int *var;			\/* integer stat variable *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_int_t
var	stats.h	/^      qword_t *var;		\/* qword integer stat variable *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_qword_t
var	stats.h	/^      sqword_t *var;		\/* signed qword integer stat variable *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_sqword_t
var	stats.h	/^      unsigned int *var;	\/* unsigned integer stat variable *\/$/;"	m	struct:stat_stat_t::stat_variant_t::stat_for_uint_t
variant	options.h	/^  } variant;$/;"	m	struct:opt_opt_t
variant	stats.h	/^  } variant;$/;"	m	struct:stat_stat_t
verbose	misc.c	/^int verbose = FALSE;$/;"	v
warn	misc.h	128;"	d
word_t	host.h	/^typedef unsigned int word_t;		\/* word - 32 bits *\/$/;"	t
write	eio.c	73;"	d	file:
write	syscall.c	216;"	d	file:
writeback	sim-scalar-cpen411.c	/^void writeback(void)$/;"	f
x	resource.h	/^  } x[MAX_RES_CLASSES];$/;"	m	struct:res_desc
xtestit	misc.c	/^xtestit(char *s)$/;"	f
